{
    "swagger": "2.0",
    "info": {
        "title": "X-Cart REST API",
        "description": "",
        "version": "5.3.3.0"
    },
    "host": "demostore.x-cart.com",
    "basePath": "/admin.php?target=RESTAPI&",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded"
    ],
    "produces": [
        "application/json",
        "application/xml"
    ],
    "paths": {
        "_path=address/0": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Add new address",
                "operationId": "createAddress",
                "parameters": [
                    {
                        "parameter": "address_body",
                        "name": "body",
                        "in": "body",
                        "description": "Address object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    }
                }
            }
        },
        "_path=address/{id}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Retrieve address by id",
                "operationId": "readAddress",
                "parameters": [
                    {
                        "parameter": "address_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Address object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Address"
                ],
                "summary": "Update address by id",
                "operationId": "updateAddress",
                "parameters": [
                    {
                        "parameter": "address_body",
                        "name": "body",
                        "in": "body",
                        "description": "Address object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    },
                    {
                        "parameter": "address_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Address object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Address"
                ],
                "summary": "Delete address by id",
                "operationId": "deleteAddress",
                "parameters": [
                    {
                        "parameter": "address_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Address object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Address"
                        }
                    }
                }
            }
        },
        "_path=address": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Retrieve addresses by conditions",
                "operationId": "readAllAddress",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Address"
                            }
                        }
                    }
                }
            }
        },
        "_path=addressfield/0": {
            "post": {
                "tags": [
                    "AddressField"
                ],
                "summary": "Add new address field",
                "operationId": "createAddressfield",
                "parameters": [
                    {
                        "parameter": "addressfield_body",
                        "name": "body",
                        "in": "body",
                        "description": "AddressField object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    }
                }
            }
        },
        "_path=addressfield/{id}": {
            "get": {
                "tags": [
                    "AddressField"
                ],
                "summary": "Retrieve address field by id",
                "operationId": "readAddressfield",
                "parameters": [
                    {
                        "parameter": "addressfield_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressField object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AddressField"
                ],
                "summary": "Update address field by id",
                "operationId": "updateAddressfield",
                "parameters": [
                    {
                        "parameter": "addressfield_body",
                        "name": "body",
                        "in": "body",
                        "description": "AddressField object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    },
                    {
                        "parameter": "addressfield_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressField object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AddressField"
                ],
                "summary": "Delete address field by id",
                "operationId": "deleteAddressfield",
                "parameters": [
                    {
                        "parameter": "addressfield_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressField object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressField"
                        }
                    }
                }
            }
        },
        "_path=addressfield": {
            "get": {
                "tags": [
                    "AddressField"
                ],
                "summary": "Retrieve address fields by conditions",
                "operationId": "readAllAddressfield",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AddressField"
                            }
                        }
                    }
                }
            }
        },
        "_path=addressfieldvalue/0": {
            "post": {
                "tags": [
                    "AddressFieldValue"
                ],
                "summary": "Add new address field value",
                "operationId": "createAddressfieldvalue",
                "parameters": [
                    {
                        "parameter": "addressfieldvalue_body",
                        "name": "body",
                        "in": "body",
                        "description": "AddressFieldValue object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    }
                }
            }
        },
        "_path=addressfieldvalue/{id}": {
            "get": {
                "tags": [
                    "AddressFieldValue"
                ],
                "summary": "Retrieve address field value by id",
                "operationId": "readAddressfieldvalue",
                "parameters": [
                    {
                        "parameter": "addressfieldvalue_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressFieldValue object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AddressFieldValue"
                ],
                "summary": "Update address field value by id",
                "operationId": "updateAddressfieldvalue",
                "parameters": [
                    {
                        "parameter": "addressfieldvalue_body",
                        "name": "body",
                        "in": "body",
                        "description": "AddressFieldValue object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    },
                    {
                        "parameter": "addressfieldvalue_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressFieldValue object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AddressFieldValue"
                ],
                "summary": "Delete address field value by id",
                "operationId": "deleteAddressfieldvalue",
                "parameters": [
                    {
                        "parameter": "addressfieldvalue_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AddressFieldValue object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                        }
                    }
                }
            }
        },
        "_path=addressfieldvalue": {
            "get": {
                "tags": [
                    "AddressFieldValue"
                ],
                "summary": "Retrieve address field values by conditions",
                "operationId": "readAllAddressfieldvalue",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                            }
                        }
                    }
                }
            }
        },
        "_path=attribute/0": {
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Add new product attribute",
                "operationId": "createAttribute",
                "parameters": [
                    {
                        "parameter": "attribute_body",
                        "name": "body",
                        "in": "body",
                        "description": "Attribute object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    }
                }
            }
        },
        "_path=attribute/{id}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Retrieve product attribute by id",
                "operationId": "readAttribute",
                "parameters": [
                    {
                        "parameter": "attribute_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Attribute object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update product attribute by id",
                "operationId": "updateAttribute",
                "parameters": [
                    {
                        "parameter": "attribute_body",
                        "name": "body",
                        "in": "body",
                        "description": "Attribute object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    },
                    {
                        "parameter": "attribute_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Attribute object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Delete product attribute by id",
                "operationId": "deleteAttribute",
                "parameters": [
                    {
                        "parameter": "attribute_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Attribute object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Attribute"
                        }
                    }
                }
            }
        },
        "_path=attribute": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Retrieve product attributes by conditions",
                "operationId": "readAllAttribute",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[product]",
                        "name": "_cnd[product]",
                        "description": "Filters attributes by certain product id (leave empty to search attributes without product)",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[productClass]",
                        "name": "_cnd[productClass]",
                        "description": "Filters attributes by product class ids",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[attributeGroup]",
                        "name": "_cnd[attributeGroup]",
                        "description": "Filters attributes by attribute group id (leave empty to search attributes without group)",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[type]",
                        "name": "_cnd[type]",
                        "description": "Filters attributes by type",
                        "type": "string",
                        "enum": [
                            "S",
                            "T",
                            "C"
                        ]
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[name]",
                        "name": "_cnd[name]",
                        "description": "Filters attributes by name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Attribute"
                            }
                        }
                    }
                }
            }
        },
        "_path=attributegroup/0": {
            "post": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Add new attribute group",
                "operationId": "createAttributegroup",
                "parameters": [
                    {
                        "parameter": "attributegroup_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeGroup object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    }
                }
            }
        },
        "_path=attributegroup/{id}": {
            "get": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Retrieve attribute group by id",
                "operationId": "readAttributegroup",
                "parameters": [
                    {
                        "parameter": "attributegroup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeGroup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Update attribute group by id",
                "operationId": "updateAttributegroup",
                "parameters": [
                    {
                        "parameter": "attributegroup_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeGroup object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    },
                    {
                        "parameter": "attributegroup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeGroup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Delete attribute group by id",
                "operationId": "deleteAttributegroup",
                "parameters": [
                    {
                        "parameter": "attributegroup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeGroup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                        }
                    }
                }
            }
        },
        "_path=attributegroup": {
            "get": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Retrieve attribute groups by conditions",
                "operationId": "readAllAttributegroup",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                            }
                        }
                    }
                }
            }
        },
        "_path=attributeoption/0": {
            "post": {
                "tags": [
                    "AttributeOption"
                ],
                "summary": "Add new attribute option",
                "operationId": "createAttributeoption",
                "parameters": [
                    {
                        "parameter": "attributeoption_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeOption object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    }
                }
            }
        },
        "_path=attributeoption/{id}": {
            "get": {
                "tags": [
                    "AttributeOption"
                ],
                "summary": "Retrieve attribute option by id",
                "operationId": "readAttributeoption",
                "parameters": [
                    {
                        "parameter": "attributeoption_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeOption object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeOption"
                ],
                "summary": "Update attribute option by id",
                "operationId": "updateAttributeoption",
                "parameters": [
                    {
                        "parameter": "attributeoption_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeOption object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    },
                    {
                        "parameter": "attributeoption_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeOption object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeOption"
                ],
                "summary": "Delete attribute option by id",
                "operationId": "deleteAttributeoption",
                "parameters": [
                    {
                        "parameter": "attributeoption_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeOption object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                        }
                    }
                }
            }
        },
        "_path=attributeoption": {
            "get": {
                "tags": [
                    "AttributeOption"
                ],
                "summary": "Retrieve attribute options by conditions",
                "operationId": "readAllAttributeoption",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                            }
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluecheckbox/0": {
            "post": {
                "tags": [
                    "AttributeValue\\AttributeValueCheckbox"
                ],
                "summary": "Add new checkbox attribute value",
                "operationId": "createAttributevalue-attributevaluecheckbox",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluecheckbox_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueCheckbox object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluecheckbox/{id}": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueCheckbox"
                ],
                "summary": "Retrieve checkbox attribute value by id",
                "operationId": "readAttributevalue-attributevaluecheckbox",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluecheckbox_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueCheckbox object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeValue\\AttributeValueCheckbox"
                ],
                "summary": "Update checkbox attribute value by id",
                "operationId": "updateAttributevalue-attributevaluecheckbox",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluecheckbox_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueCheckbox object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    },
                    {
                        "parameter": "attributevalue-attributevaluecheckbox_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueCheckbox object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeValue\\AttributeValueCheckbox"
                ],
                "summary": "Delete checkbox attribute value by id",
                "operationId": "deleteAttributevalue-attributevaluecheckbox",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluecheckbox_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueCheckbox object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluecheckbox": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueCheckbox"
                ],
                "summary": "Retrieve checkbox attribute values by conditions",
                "operationId": "readAllAttributevalue-attributevaluecheckbox",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[product]",
                        "description": "Filters attribute values by product id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                            }
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevalueselect/0": {
            "post": {
                "tags": [
                    "AttributeValue\\AttributeValueSelect"
                ],
                "summary": "Add new select attribute value",
                "operationId": "createAttributevalue-attributevalueselect",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevalueselect_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueSelect object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevalueselect/{id}": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueSelect"
                ],
                "summary": "Retrieve select attribute value by id",
                "operationId": "readAttributevalue-attributevalueselect",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevalueselect_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueSelect object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeValue\\AttributeValueSelect"
                ],
                "summary": "Update select attribute value by id",
                "operationId": "updateAttributevalue-attributevalueselect",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevalueselect_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueSelect object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    },
                    {
                        "parameter": "attributevalue-attributevalueselect_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueSelect object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeValue\\AttributeValueSelect"
                ],
                "summary": "Delete select attribute value by id",
                "operationId": "deleteAttributevalue-attributevalueselect",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevalueselect_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueSelect object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevalueselect": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueSelect"
                ],
                "summary": "Retrieve select attribute values by conditions",
                "operationId": "readAllAttributevalue-attributevalueselect",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[product]",
                        "description": "Filters attribute values by product id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                            }
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluetext/0": {
            "post": {
                "tags": [
                    "AttributeValue\\AttributeValueText"
                ],
                "summary": "Add new text attribute value",
                "operationId": "createAttributevalue-attributevaluetext",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluetext_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueText object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluetext/{id}": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueText"
                ],
                "summary": "Retrieve text attribute value by id",
                "operationId": "readAttributevalue-attributevaluetext",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluetext_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueText object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeValue\\AttributeValueText"
                ],
                "summary": "Update text attribute value by id",
                "operationId": "updateAttributevalue-attributevaluetext",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluetext_body",
                        "name": "body",
                        "in": "body",
                        "description": "AttributeValueText object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    },
                    {
                        "parameter": "attributevalue-attributevaluetext_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueText object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeValue\\AttributeValueText"
                ],
                "summary": "Delete text attribute value by id",
                "operationId": "deleteAttributevalue-attributevaluetext",
                "parameters": [
                    {
                        "parameter": "attributevalue-attributevaluetext_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the AttributeValueText object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                        }
                    }
                }
            }
        },
        "_path=attributevalue-attributevaluetext": {
            "get": {
                "tags": [
                    "AttributeValue\\AttributeValueText"
                ],
                "summary": "Retrieve text attribute values by conditions",
                "operationId": "readAllAttributevalue-attributevaluetext",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[product]",
                        "description": "Filters attribute values by product id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                            }
                        }
                    }
                }
            }
        },
        "_path=cart/0": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add new cart",
                "operationId": "createCart",
                "parameters": [
                    {
                        "parameter": "cart_body",
                        "name": "body",
                        "in": "body",
                        "description": "Cart object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    }
                }
            }
        },
        "_path=cart/{id}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve cart by id",
                "operationId": "readCart",
                "parameters": [
                    {
                        "parameter": "cart_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Cart object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart by id",
                "operationId": "updateCart",
                "parameters": [
                    {
                        "parameter": "cart_body",
                        "name": "body",
                        "in": "body",
                        "description": "Cart object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    },
                    {
                        "parameter": "cart_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Cart object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete cart by id",
                "operationId": "deleteCart",
                "parameters": [
                    {
                        "parameter": "cart_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Cart object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Cart"
                        }
                    }
                }
            }
        },
        "_path=cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve carts by conditions",
                "operationId": "readAllCart",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Cart"
                            }
                        }
                    }
                }
            }
        },
        "_path=category/0": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Add new category",
                "operationId": "createCategory",
                "parameters": [
                    {
                        "parameter": "category_body",
                        "name": "body",
                        "in": "body",
                        "description": "Category object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    }
                }
            }
        },
        "_path=category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Retrieve category by id",
                "operationId": "readCategory",
                "parameters": [
                    {
                        "parameter": "category_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Category object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update category by id",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "parameter": "category_body",
                        "name": "body",
                        "in": "body",
                        "description": "Category object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    },
                    {
                        "parameter": "category_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Category object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete category by id",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "parameter": "category_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Category object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Category"
                        }
                    }
                }
            }
        },
        "_path=category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Retrieve categories by conditions",
                "operationId": "readAllCategory",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[parent]",
                        "name": "_cnd[parent]",
                        "description": "Filters categories by parent id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[subTree]",
                        "name": "_cnd[subTree]",
                        "description": "Retrieve categories subtree by parent id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[term]",
                        "name": "_cnd[term]",
                        "description": "Search by term",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[lastUsage]",
                        "name": "_cnd[lastUsage]",
                        "description": "Filters last used categories",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Category"
                            }
                        }
                    }
                }
            }
        },
        "_path=cleanurl/0": {
            "post": {
                "tags": [
                    "CleanURL"
                ],
                "summary": "Add new clean url",
                "operationId": "createCleanurl",
                "parameters": [
                    {
                        "parameter": "cleanurl_body",
                        "name": "body",
                        "in": "body",
                        "description": "CleanURL object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    }
                }
            }
        },
        "_path=cleanurl/{id}": {
            "get": {
                "tags": [
                    "CleanURL"
                ],
                "summary": "Retrieve clean url by id",
                "operationId": "readCleanurl",
                "parameters": [
                    {
                        "parameter": "cleanurl_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the CleanURL object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CleanURL"
                ],
                "summary": "Update clean url by id",
                "operationId": "updateCleanurl",
                "parameters": [
                    {
                        "parameter": "cleanurl_body",
                        "name": "body",
                        "in": "body",
                        "description": "CleanURL object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    },
                    {
                        "parameter": "cleanurl_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the CleanURL object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CleanURL"
                ],
                "summary": "Delete clean url by id",
                "operationId": "deleteCleanurl",
                "parameters": [
                    {
                        "parameter": "cleanurl_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the CleanURL object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\CleanURL"
                        }
                    }
                }
            }
        },
        "_path=cleanurl": {
            "get": {
                "tags": [
                    "CleanURL"
                ],
                "summary": "Retrieve all clean urls",
                "operationId": "readAllCleanurl",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\CleanURL"
                            }
                        }
                    }
                }
            }
        },
        "_path=config/0": {
            "post": {
                "tags": [
                    "Config"
                ],
                "summary": "Add new config entry",
                "operationId": "createConfig",
                "parameters": [
                    {
                        "parameter": "config_body",
                        "name": "body",
                        "in": "body",
                        "description": "Config object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    }
                }
            }
        },
        "_path=config/{id}": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Retrieve config entry by id",
                "operationId": "readConfig",
                "parameters": [
                    {
                        "parameter": "config_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Config object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Update config entry by id",
                "operationId": "updateConfig",
                "parameters": [
                    {
                        "parameter": "config_body",
                        "name": "body",
                        "in": "body",
                        "description": "Config object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    },
                    {
                        "parameter": "config_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Config object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Config"
                ],
                "summary": "Delete config entry by id",
                "operationId": "deleteConfig",
                "parameters": [
                    {
                        "parameter": "config_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Config object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Config"
                        }
                    }
                }
            }
        },
        "_path=config": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Retrieve all config entries",
                "operationId": "readAllConfig",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Config"
                            }
                        }
                    }
                }
            }
        },
        "_path=country/0": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Add new country",
                "operationId": "createCountry",
                "parameters": [
                    {
                        "parameter": "country_body",
                        "name": "body",
                        "in": "body",
                        "description": "Country object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    }
                }
            }
        },
        "_path=country/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Retrieve country by id",
                "operationId": "readCountry",
                "parameters": [
                    {
                        "parameter": "country_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Country object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update country by id",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "parameter": "country_body",
                        "name": "body",
                        "in": "body",
                        "description": "Country object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    },
                    {
                        "parameter": "country_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Country object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete country by id",
                "operationId": "deleteCountry",
                "parameters": [
                    {
                        "parameter": "country_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Country object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Country"
                        }
                    }
                }
            }
        },
        "_path=country": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Retrieve countries by conditions",
                "operationId": "readAllCountry",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[substring]",
                        "name": "_cnd[substring]",
                        "description": "Retrieve country by substring",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[hasStates]",
                        "name": "_cnd[hasStates]",
                        "description": "Retrieve only countries with states",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Country"
                            }
                        }
                    }
                }
            }
        },
        "_path=currency/0": {
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Add new currency",
                "operationId": "createCurrency",
                "parameters": [
                    {
                        "parameter": "currency_body",
                        "name": "body",
                        "in": "body",
                        "description": "Currency object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    }
                }
            }
        },
        "_path=currency/{id}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Retrieve currency by id",
                "operationId": "readCurrency",
                "parameters": [
                    {
                        "parameter": "currency_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Currency object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Update currency by id",
                "operationId": "updateCurrency",
                "parameters": [
                    {
                        "parameter": "currency_body",
                        "name": "body",
                        "in": "body",
                        "description": "Currency object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    },
                    {
                        "parameter": "currency_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Currency object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Delete currency by id",
                "operationId": "deleteCurrency",
                "parameters": [
                    {
                        "parameter": "currency_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Currency object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Currency"
                        }
                    }
                }
            }
        },
        "_path=currency": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Retrieve all currencies",
                "operationId": "readAllCurrency",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Currency"
                            }
                        }
                    }
                }
            }
        },
        "_path=image-bannerrotationimage/0": {
            "post": {
                "tags": [
                    "Image\\BannerRotationImage"
                ],
                "summary": "Add new banner image",
                "operationId": "createImage-bannerrotationimage",
                "parameters": [
                    {
                        "parameter": "image-bannerrotationimage_body",
                        "name": "body",
                        "in": "body",
                        "description": "BannerRotationImage object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    }
                }
            }
        },
        "_path=image-bannerrotationimage/{id}": {
            "get": {
                "tags": [
                    "Image\\BannerRotationImage"
                ],
                "summary": "Retrieve banner image by id",
                "operationId": "readImage-bannerrotationimage",
                "parameters": [
                    {
                        "parameter": "image-bannerrotationimage_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BannerRotationImage object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Image\\BannerRotationImage"
                ],
                "summary": "Update banner image by id",
                "operationId": "updateImage-bannerrotationimage",
                "parameters": [
                    {
                        "parameter": "image-bannerrotationimage_body",
                        "name": "body",
                        "in": "body",
                        "description": "BannerRotationImage object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    },
                    {
                        "parameter": "image-bannerrotationimage_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BannerRotationImage object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image\\BannerRotationImage"
                ],
                "summary": "Delete banner image by id",
                "operationId": "deleteImage-bannerrotationimage",
                "parameters": [
                    {
                        "parameter": "image-bannerrotationimage_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BannerRotationImage object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                        }
                    }
                }
            }
        },
        "_path=image-bannerrotationimage": {
            "get": {
                "tags": [
                    "Image\\BannerRotationImage"
                ],
                "summary": "Retrieve all banner images",
                "operationId": "readAllImage-bannerrotationimage",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                            }
                        }
                    }
                }
            }
        },
        "_path=image-category-banner/0": {
            "post": {
                "tags": [
                    "Image\\Category\\Banner"
                ],
                "summary": "Add new category banner image",
                "operationId": "createImage-category-banner",
                "parameters": [
                    {
                        "parameter": "image-category-banner_body",
                        "name": "body",
                        "in": "body",
                        "description": "Banner object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    }
                }
            }
        },
        "_path=image-category-banner/{id}": {
            "get": {
                "tags": [
                    "Image\\Category\\Banner"
                ],
                "summary": "Retrieve category banner image by id",
                "operationId": "readImage-category-banner",
                "parameters": [
                    {
                        "parameter": "image-category-banner_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Banner object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Image\\Category\\Banner"
                ],
                "summary": "Update category banner image by id",
                "operationId": "updateImage-category-banner",
                "parameters": [
                    {
                        "parameter": "image-category-banner_body",
                        "name": "body",
                        "in": "body",
                        "description": "Banner object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    },
                    {
                        "parameter": "image-category-banner_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Banner object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image\\Category\\Banner"
                ],
                "summary": "Delete category banner image by id",
                "operationId": "deleteImage-category-banner",
                "parameters": [
                    {
                        "parameter": "image-category-banner_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Banner object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                        }
                    }
                }
            }
        },
        "_path=image-category-banner": {
            "get": {
                "tags": [
                    "Image\\Category\\Banner"
                ],
                "summary": "Retrieve all category banner images",
                "operationId": "readAllImage-category-banner",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                            }
                        }
                    }
                }
            }
        },
        "_path=image-category-image/0": {
            "post": {
                "tags": [
                    "Image\\Category\\Image"
                ],
                "summary": "Add new category thumbnail",
                "operationId": "createImage-category-image",
                "parameters": [
                    {
                        "parameter": "image-category-image_body",
                        "name": "body",
                        "in": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    }
                }
            }
        },
        "_path=image-category-image/{id}": {
            "get": {
                "tags": [
                    "Image\\Category\\Image"
                ],
                "summary": "Retrieve category thumbnail by id",
                "operationId": "readImage-category-image",
                "parameters": [
                    {
                        "parameter": "image-category-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Image\\Category\\Image"
                ],
                "summary": "Update category thumbnail by id",
                "operationId": "updateImage-category-image",
                "parameters": [
                    {
                        "parameter": "image-category-image_body",
                        "name": "body",
                        "in": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    },
                    {
                        "parameter": "image-category-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image\\Category\\Image"
                ],
                "summary": "Delete category thumbnail by id",
                "operationId": "deleteImage-category-image",
                "parameters": [
                    {
                        "parameter": "image-category-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                        }
                    }
                }
            }
        },
        "_path=image-category-image": {
            "get": {
                "tags": [
                    "Image\\Category\\Image"
                ],
                "summary": "Retrieve all category thumbnails",
                "operationId": "readAllImage-category-image",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                            }
                        }
                    }
                }
            }
        },
        "_path=image-content/0": {
            "post": {
                "tags": [
                    "Image\\Content"
                ],
                "summary": "Add new content image",
                "operationId": "createImage-content",
                "parameters": [
                    {
                        "parameter": "image-content_body",
                        "name": "body",
                        "in": "body",
                        "description": "Content object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    }
                }
            }
        },
        "_path=image-content/{id}": {
            "get": {
                "tags": [
                    "Image\\Content"
                ],
                "summary": "Retrieve content image by id",
                "operationId": "readImage-content",
                "parameters": [
                    {
                        "parameter": "image-content_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Content object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Image\\Content"
                ],
                "summary": "Update content image by id",
                "operationId": "updateImage-content",
                "parameters": [
                    {
                        "parameter": "image-content_body",
                        "name": "body",
                        "in": "body",
                        "description": "Content object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    },
                    {
                        "parameter": "image-content_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Content object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image\\Content"
                ],
                "summary": "Delete content image by id",
                "operationId": "deleteImage-content",
                "parameters": [
                    {
                        "parameter": "image-content_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Content object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                        }
                    }
                }
            }
        },
        "_path=image-content": {
            "get": {
                "tags": [
                    "Image\\Content"
                ],
                "summary": "Retrieve all content images",
                "operationId": "readAllImage-content",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Image\\Content"
                            }
                        }
                    }
                }
            }
        },
        "_path=image-product-image/0": {
            "post": {
                "tags": [
                    "Image\\Product\\Image"
                ],
                "summary": "Add new product image",
                "operationId": "createImage-product-image",
                "parameters": [
                    {
                        "parameter": "image-product-image_body",
                        "name": "body",
                        "in": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    }
                }
            }
        },
        "_path=image-product-image/{id}": {
            "get": {
                "tags": [
                    "Image\\Product\\Image"
                ],
                "summary": "Retrieve product image by id",
                "operationId": "readImage-product-image",
                "parameters": [
                    {
                        "parameter": "image-product-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Image\\Product\\Image"
                ],
                "summary": "Update product image by id",
                "operationId": "updateImage-product-image",
                "parameters": [
                    {
                        "parameter": "image-product-image_body",
                        "name": "body",
                        "in": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    },
                    {
                        "parameter": "image-product-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image\\Product\\Image"
                ],
                "summary": "Delete product image by id",
                "operationId": "deleteImage-product-image",
                "parameters": [
                    {
                        "parameter": "image-product-image_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Image object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                        }
                    }
                }
            }
        },
        "_path=image-product-image": {
            "get": {
                "tags": [
                    "Image\\Product\\Image"
                ],
                "summary": "Retrieve all product images",
                "operationId": "readAllImage-product-image",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                            }
                        }
                    }
                }
            }
        },
        "_path=importlog/{id}": {
            "get": {
                "tags": [
                    "ImportLog"
                ],
                "summary": "Retrieve import log entry by id",
                "operationId": "readImportlog",
                "parameters": [
                    {
                        "parameter": "importlog_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ImportLog object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ImportLog"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ImportLog"
                ],
                "summary": "Delete import log entry by id",
                "operationId": "deleteImportlog",
                "parameters": [
                    {
                        "parameter": "importlog_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ImportLog object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ImportLog"
                        }
                    }
                }
            }
        },
        "_path=importlog": {
            "get": {
                "tags": [
                    "ImportLog"
                ],
                "summary": "Retrieve all import log entries",
                "operationId": "readAllImportlog",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\ImportLog"
                            }
                        }
                    }
                }
            }
        },
        "_path=language/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Retrieve language by id",
                "operationId": "readLanguage",
                "parameters": [
                    {
                        "parameter": "language_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Language object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Language"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Delete language by id",
                "operationId": "deleteLanguage",
                "parameters": [
                    {
                        "parameter": "language_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Language object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Language"
                        }
                    }
                }
            }
        },
        "_path=language": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Retrieve language records",
                "operationId": "readAllLanguage",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Language"
                            }
                        }
                    }
                }
            }
        },
        "_path=languagelabel/0": {
            "post": {
                "tags": [
                    "LanguageLabel"
                ],
                "summary": "Add new language label",
                "operationId": "createLanguagelabel",
                "parameters": [
                    {
                        "parameter": "languagelabel_body",
                        "name": "body",
                        "in": "body",
                        "description": "LanguageLabel object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    }
                }
            }
        },
        "_path=languagelabel/{id}": {
            "get": {
                "tags": [
                    "LanguageLabel"
                ],
                "summary": "Retrieve language label by id",
                "operationId": "readLanguagelabel",
                "parameters": [
                    {
                        "parameter": "languagelabel_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the LanguageLabel object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "LanguageLabel"
                ],
                "summary": "Update language label by id",
                "operationId": "updateLanguagelabel",
                "parameters": [
                    {
                        "parameter": "languagelabel_body",
                        "name": "body",
                        "in": "body",
                        "description": "LanguageLabel object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    },
                    {
                        "parameter": "languagelabel_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the LanguageLabel object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "LanguageLabel"
                ],
                "summary": "Delete language by id",
                "operationId": "deleteLanguagelabel",
                "parameters": [
                    {
                        "parameter": "languagelabel_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the LanguageLabel object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                        }
                    }
                }
            }
        },
        "_path=languagelabel": {
            "get": {
                "tags": [
                    "LanguageLabel"
                ],
                "summary": "Retrieve language labels by condition",
                "operationId": "readAllLanguagelabel",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\LanguageLabel"
                            }
                        }
                    }
                }
            }
        },
        "_path=membership/0": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Add new membership",
                "operationId": "createMembership",
                "parameters": [
                    {
                        "parameter": "membership_body",
                        "name": "body",
                        "in": "body",
                        "description": "Membership object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    }
                }
            }
        },
        "_path=membership/{id}": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Retrieve membership by id",
                "operationId": "readMembership",
                "parameters": [
                    {
                        "parameter": "membership_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Membership object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Membership"
                ],
                "summary": "Update membership by id",
                "operationId": "updateMembership",
                "parameters": [
                    {
                        "parameter": "membership_body",
                        "name": "body",
                        "in": "body",
                        "description": "Membership object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    },
                    {
                        "parameter": "membership_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Membership object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Membership"
                ],
                "summary": "Delete membership by id",
                "operationId": "deleteMembership",
                "parameters": [
                    {
                        "parameter": "membership_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Membership object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Membership"
                        }
                    }
                }
            }
        },
        "_path=membership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Retrieve all memberships",
                "operationId": "readAllMembership",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Membership"
                            }
                        }
                    }
                }
            }
        },
        "_path=notification/{id}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Retrieve email notification type by id",
                "operationId": "readNotification",
                "parameters": [
                    {
                        "parameter": "notification_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Notification object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Notification"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Update email notification type by id",
                "operationId": "updateNotification",
                "parameters": [
                    {
                        "parameter": "notification_body",
                        "name": "body",
                        "in": "body",
                        "description": "Notification object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Notification"
                        }
                    },
                    {
                        "parameter": "notification_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Notification object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Notification"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notification"
                ],
                "summary": "Delete email notification type by id",
                "operationId": "deleteNotification",
                "parameters": [
                    {
                        "parameter": "notification_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Notification object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Notification"
                        }
                    }
                }
            }
        },
        "_path=notification": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Retrieve all email notification types",
                "operationId": "readAllNotification",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Notification"
                            }
                        }
                    }
                }
            }
        },
        "_path=order-modifier/0": {
            "post": {
                "tags": [
                    "Order\\Modifier"
                ],
                "summary": "Add new order modifier",
                "operationId": "createOrder-modifier",
                "parameters": [
                    {
                        "parameter": "order-modifier_body",
                        "name": "body",
                        "in": "body",
                        "description": "Modifier object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    }
                }
            }
        },
        "_path=order-modifier/{id}": {
            "get": {
                "tags": [
                    "Order\\Modifier"
                ],
                "summary": "Retrieve order modifier by id",
                "operationId": "readOrder-modifier",
                "parameters": [
                    {
                        "parameter": "order-modifier_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Modifier object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order\\Modifier"
                ],
                "summary": "Update order modifier by id",
                "operationId": "updateOrder-modifier",
                "parameters": [
                    {
                        "parameter": "order-modifier_body",
                        "name": "body",
                        "in": "body",
                        "description": "Modifier object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    },
                    {
                        "parameter": "order-modifier_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Modifier object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order\\Modifier"
                ],
                "summary": "Delete order modifier by id",
                "operationId": "deleteOrder-modifier",
                "parameters": [
                    {
                        "parameter": "order-modifier_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Modifier object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                        }
                    }
                }
            }
        },
        "_path=order-modifier": {
            "get": {
                "tags": [
                    "Order\\Modifier"
                ],
                "summary": "Retrieve all order modifiers",
                "operationId": "readAllOrder-modifier",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Order\\Modifier"
                            }
                        }
                    }
                }
            }
        },
        "_path=order-status-payment/0": {
            "post": {
                "tags": [
                    "Order\\Status\\Payment"
                ],
                "summary": "Add new payment status",
                "operationId": "createOrder-status-payment",
                "parameters": [
                    {
                        "parameter": "order-status-payment_body",
                        "name": "body",
                        "in": "body",
                        "description": "Payment object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    }
                }
            }
        },
        "_path=order-status-payment/{id}": {
            "get": {
                "tags": [
                    "Order\\Status\\Payment"
                ],
                "summary": "Retrieve payment status by id",
                "operationId": "readOrder-status-payment",
                "parameters": [
                    {
                        "parameter": "order-status-payment_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Payment object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order\\Status\\Payment"
                ],
                "summary": "Update payment status by id",
                "operationId": "updateOrder-status-payment",
                "parameters": [
                    {
                        "parameter": "order-status-payment_body",
                        "name": "body",
                        "in": "body",
                        "description": "Payment object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    },
                    {
                        "parameter": "order-status-payment_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Payment object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order\\Status\\Payment"
                ],
                "summary": "Delete payment status by id",
                "operationId": "deleteOrder-status-payment",
                "parameters": [
                    {
                        "parameter": "order-status-payment_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Payment object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                        }
                    }
                }
            }
        },
        "_path=order-status-payment": {
            "get": {
                "tags": [
                    "Order\\Status\\Payment"
                ],
                "summary": "Retrieve all payment statuses",
                "operationId": "readAllOrder-status-payment",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                            }
                        }
                    }
                }
            }
        },
        "_path=order-status-shipping/0": {
            "post": {
                "tags": [
                    "Order\\Status\\Shipping"
                ],
                "summary": "Add new shipping status",
                "operationId": "createOrder-status-shipping",
                "parameters": [
                    {
                        "parameter": "order-status-shipping_body",
                        "name": "body",
                        "in": "body",
                        "description": "Shipping object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    }
                }
            }
        },
        "_path=order-status-shipping/{id}": {
            "get": {
                "tags": [
                    "Order\\Status\\Shipping"
                ],
                "summary": "Retrieve shipping status by id",
                "operationId": "readOrder-status-shipping",
                "parameters": [
                    {
                        "parameter": "order-status-shipping_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Shipping object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order\\Status\\Shipping"
                ],
                "summary": "Update shipping status by id",
                "operationId": "updateOrder-status-shipping",
                "parameters": [
                    {
                        "parameter": "order-status-shipping_body",
                        "name": "body",
                        "in": "body",
                        "description": "Shipping object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    },
                    {
                        "parameter": "order-status-shipping_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Shipping object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order\\Status\\Shipping"
                ],
                "summary": "Delete shipping status by id",
                "operationId": "deleteOrder-status-shipping",
                "parameters": [
                    {
                        "parameter": "order-status-shipping_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Shipping object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                        }
                    }
                }
            }
        },
        "_path=order-status-shipping": {
            "get": {
                "tags": [
                    "Order\\Status\\Shipping"
                ],
                "summary": "Retrieve all shipping statuses",
                "operationId": "readAllOrder-status-shipping",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                            }
                        }
                    }
                }
            }
        },
        "_path=order-surcharge/0": {
            "post": {
                "tags": [
                    "Order\\Surcharge"
                ],
                "summary": "Add new order surcharge",
                "operationId": "createOrder-surcharge",
                "parameters": [
                    {
                        "parameter": "order-surcharge_body",
                        "name": "body",
                        "in": "body",
                        "description": "Surcharge object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    }
                }
            }
        },
        "_path=order-surcharge/{id}": {
            "get": {
                "tags": [
                    "Order\\Surcharge"
                ],
                "summary": "Retrieve order surcharge by id",
                "operationId": "readOrder-surcharge",
                "parameters": [
                    {
                        "parameter": "order-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order\\Surcharge"
                ],
                "summary": "Update order surcharge by id",
                "operationId": "updateOrder-surcharge",
                "parameters": [
                    {
                        "parameter": "order-surcharge_body",
                        "name": "body",
                        "in": "body",
                        "description": "Surcharge object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    },
                    {
                        "parameter": "order-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order\\Surcharge"
                ],
                "summary": "Delete order surcharge by id",
                "operationId": "deleteOrder-surcharge",
                "parameters": [
                    {
                        "parameter": "order-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                        }
                    }
                }
            }
        },
        "_path=order-surcharge": {
            "get": {
                "tags": [
                    "Order\\Surcharge"
                ],
                "summary": "Retrieve all order surcharges",
                "operationId": "readAllOrder-surcharge",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                            }
                        }
                    }
                }
            }
        },
        "_path=order/0": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Add new order",
                "operationId": "createOrder",
                "parameters": [
                    {
                        "parameter": "order_body",
                        "name": "body",
                        "in": "body",
                        "description": "Order object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    }
                }
            }
        },
        "_path=order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Retrieve order by id",
                "operationId": "readOrder",
                "parameters": [
                    {
                        "parameter": "order_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Order object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update order by id",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "parameter": "order_body",
                        "name": "body",
                        "in": "body",
                        "description": "Order object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    },
                    {
                        "parameter": "order_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Order object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete order by id",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "parameter": "order_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Order object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Order"
                        }
                    }
                }
            }
        },
        "_path=order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Retrieve orders by conditions",
                "operationId": "readAllOrder",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderNumber]",
                        "name": "_cnd[orderNumber]",
                        "description": "Retrieve order by its number",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[accessLevel]",
                        "name": "_cnd[accessLevel]",
                        "description": "Retrieve order by user access level",
                        "type": "string",
                        "enum": [
                            "anonymous",
                            "registered"
                        ]
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[dateRange]",
                        "name": "_cnd[dateRange]",
                        "description": "Filters order by date (timestamp) arranged in two-value array [start, end]",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[substring]",
                        "description": "Retrieve order by user login or order number substring",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[sku]",
                        "name": "_cnd[sku]",
                        "description": "Retrieve order by product sku",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[recent]",
                        "name": "_cnd[recent]",
                        "description": "Retrieve only recent (unprocessed) orders",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[profileId]",
                        "name": "_cnd[profileId]",
                        "description": "Retrieve orders by profile id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[email]",
                        "name": "_cnd[email]",
                        "description": "Retrieve orders by user login",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[paymentStatus]",
                        "name": "_cnd[paymentStatus]",
                        "description": "Retrieve orders in certain payment status",
                        "type": "string",
                        "enum": [
                            "A",
                            "PP",
                            "P",
                            "D",
                            "C",
                            "Q",
                            "R"
                        ]
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[shippingStatus]",
                        "name": "_cnd[shippingStatus]",
                        "description": "Retrieve orders in certain shipping status",
                        "type": "string",
                        "enum": [
                            "N",
                            "P",
                            "S",
                            "D",
                            "WND",
                            "R",
                            "WFA"
                        ]
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[currency]",
                        "name": "_cnd[currency]",
                        "description": "Filters order by currency id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[transactionID]",
                        "name": "_cnd[transactionID]",
                        "description": "Filters order by payment transaction public_id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[zipcode]",
                        "name": "_cnd[zipcode]",
                        "description": "Filters orders by user zipcode",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[customerName]",
                        "name": "_cnd[customerName]",
                        "description": "Filters orders by customer name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderByFullname]",
                        "name": "_cnd[orderByFullname]",
                        "description": "Filters orders by customer firstname-lastname pair",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[shippingMethodName]",
                        "name": "_cnd[shippingMethodName]",
                        "description": "Filters orders by shipping method name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[paymentMethodName]",
                        "name": "_cnd[paymentMethodName]",
                        "description": "Filters orders by payment method name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Order"
                            }
                        }
                    }
                }
            }
        },
        "_path=orderhistoryevents/0": {
            "post": {
                "tags": [
                    "OrderHistoryEvents"
                ],
                "summary": "Add new order history event",
                "operationId": "createOrderhistoryevents",
                "parameters": [
                    {
                        "parameter": "orderhistoryevents_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderHistoryEvents object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    }
                }
            }
        },
        "_path=orderhistoryevents/{id}": {
            "get": {
                "tags": [
                    "OrderHistoryEvents"
                ],
                "summary": "Retrieve order history event by id",
                "operationId": "readOrderhistoryevents",
                "parameters": [
                    {
                        "parameter": "orderhistoryevents_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderHistoryEvents object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderHistoryEvents"
                ],
                "summary": "Update order history event by id",
                "operationId": "updateOrderhistoryevents",
                "parameters": [
                    {
                        "parameter": "orderhistoryevents_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderHistoryEvents object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    },
                    {
                        "parameter": "orderhistoryevents_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderHistoryEvents object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderHistoryEvents"
                ],
                "summary": "Delete order history event by id",
                "operationId": "deleteOrderhistoryevents",
                "parameters": [
                    {
                        "parameter": "orderhistoryevents_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderHistoryEvents object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                        }
                    }
                }
            }
        },
        "_path=orderhistoryevents": {
            "get": {
                "tags": [
                    "OrderHistoryEvents"
                ],
                "summary": "Retrieve order history events by conditions",
                "operationId": "readAllOrderhistoryevents",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                            }
                        }
                    }
                }
            }
        },
        "_path=orderitem-surcharge/0": {
            "post": {
                "tags": [
                    "OrderItem\\Surcharge"
                ],
                "summary": "Add new order item surcharge",
                "operationId": "createOrderitem-surcharge",
                "parameters": [
                    {
                        "parameter": "orderitem-surcharge_body",
                        "name": "body",
                        "in": "body",
                        "description": "Surcharge object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    }
                }
            }
        },
        "_path=orderitem-surcharge/{id}": {
            "get": {
                "tags": [
                    "OrderItem\\Surcharge"
                ],
                "summary": "Retrieve order item surcharge by id",
                "operationId": "readOrderitem-surcharge",
                "parameters": [
                    {
                        "parameter": "orderitem-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderItem\\Surcharge"
                ],
                "summary": "Update order item surcharge by id",
                "operationId": "updateOrderitem-surcharge",
                "parameters": [
                    {
                        "parameter": "orderitem-surcharge_body",
                        "name": "body",
                        "in": "body",
                        "description": "Surcharge object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    },
                    {
                        "parameter": "orderitem-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderItem\\Surcharge"
                ],
                "summary": "Delete order item surcharge by id",
                "operationId": "deleteOrderitem-surcharge",
                "parameters": [
                    {
                        "parameter": "orderitem-surcharge_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Surcharge object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                        }
                    }
                }
            }
        },
        "_path=orderitem-surcharge": {
            "get": {
                "tags": [
                    "OrderItem\\Surcharge"
                ],
                "summary": "Retrieve all order item surcharges",
                "operationId": "readAllOrderitem-surcharge",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                            }
                        }
                    }
                }
            }
        },
        "_path=orderitem/0": {
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Add new order item",
                "operationId": "createOrderitem",
                "parameters": [
                    {
                        "parameter": "orderitem_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderItem object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    }
                }
            }
        },
        "_path=orderitem/{id}": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Retrieve order item by id",
                "operationId": "readOrderitem",
                "parameters": [
                    {
                        "parameter": "orderitem_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderItem object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Update order item by id",
                "operationId": "updateOrderitem",
                "parameters": [
                    {
                        "parameter": "orderitem_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderItem object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    },
                    {
                        "parameter": "orderitem_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderItem object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Delete order item by id",
                "operationId": "deleteOrderitem",
                "parameters": [
                    {
                        "parameter": "orderitem_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderItem object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderItem"
                        }
                    }
                }
            }
        },
        "_path=orderitem": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Retrieve order items by conditions",
                "operationId": "readAllOrderitem",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[order]",
                        "name": "_cnd[order]",
                        "description": "Filters order items by order id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\OrderItem"
                            }
                        }
                    }
                }
            }
        },
        "_path=ordertrackingnumber/0": {
            "post": {
                "tags": [
                    "OrderTrackingNumber"
                ],
                "summary": "Add new order tracking number",
                "operationId": "createOrdertrackingnumber",
                "parameters": [
                    {
                        "parameter": "ordertrackingnumber_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderTrackingNumber object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    }
                }
            }
        },
        "_path=ordertrackingnumber/{id}": {
            "get": {
                "tags": [
                    "OrderTrackingNumber"
                ],
                "summary": "Retrieve order tracking number by id",
                "operationId": "readOrdertrackingnumber",
                "parameters": [
                    {
                        "parameter": "ordertrackingnumber_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderTrackingNumber object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderTrackingNumber"
                ],
                "summary": "Update order tracking number by id",
                "operationId": "updateOrdertrackingnumber",
                "parameters": [
                    {
                        "parameter": "ordertrackingnumber_body",
                        "name": "body",
                        "in": "body",
                        "description": "OrderTrackingNumber object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    },
                    {
                        "parameter": "ordertrackingnumber_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderTrackingNumber object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderTrackingNumber"
                ],
                "summary": "Delete order tracking number by id",
                "operationId": "deleteOrdertrackingnumber",
                "parameters": [
                    {
                        "parameter": "ordertrackingnumber_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the OrderTrackingNumber object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                        }
                    }
                }
            }
        },
        "_path=ordertrackingnumber": {
            "get": {
                "tags": [
                    "OrderTrackingNumber"
                ],
                "summary": "Retrieve order tracking numbers by conditions",
                "operationId": "readAllOrdertrackingnumber",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                            }
                        }
                    }
                }
            }
        },
        "_path=payment-backendtransaction/0": {
            "post": {
                "tags": [
                    "Payment\\BackendTransaction"
                ],
                "summary": "Add new backend transaction",
                "operationId": "createPayment-backendtransaction",
                "parameters": [
                    {
                        "parameter": "payment-backendtransaction_body",
                        "name": "body",
                        "in": "body",
                        "description": "BackendTransaction object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    }
                }
            }
        },
        "_path=payment-backendtransaction/{id}": {
            "get": {
                "tags": [
                    "Payment\\BackendTransaction"
                ],
                "summary": "Retrieve backend transaction by id",
                "operationId": "readPayment-backendtransaction",
                "parameters": [
                    {
                        "parameter": "payment-backendtransaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BackendTransaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Payment\\BackendTransaction"
                ],
                "summary": "Update backend transaction by id",
                "operationId": "updatePayment-backendtransaction",
                "parameters": [
                    {
                        "parameter": "payment-backendtransaction_body",
                        "name": "body",
                        "in": "body",
                        "description": "BackendTransaction object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    },
                    {
                        "parameter": "payment-backendtransaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BackendTransaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Payment\\BackendTransaction"
                ],
                "summary": "Delete backend transaction by id",
                "operationId": "deletePayment-backendtransaction",
                "parameters": [
                    {
                        "parameter": "payment-backendtransaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the BackendTransaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                        }
                    }
                }
            }
        },
        "_path=payment-backendtransaction": {
            "get": {
                "tags": [
                    "Payment\\BackendTransaction"
                ],
                "summary": "Retrieve all backend transactions",
                "operationId": "readAllPayment-backendtransaction",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                            }
                        }
                    }
                }
            }
        },
        "_path=payment-method/{id}": {
            "get": {
                "tags": [
                    "Payment\\Method"
                ],
                "summary": "Retrieve payment method by id",
                "operationId": "readPayment-method",
                "parameters": [
                    {
                        "parameter": "payment-method_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Method object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Payment\\Method"
                ],
                "summary": "Update payment method by id",
                "operationId": "updatePayment-method",
                "parameters": [
                    {
                        "parameter": "payment-method_body",
                        "name": "body",
                        "in": "body",
                        "description": "Method object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                        }
                    },
                    {
                        "parameter": "payment-method_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Method object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                        }
                    }
                }
            }
        },
        "_path=payment-method": {
            "get": {
                "tags": [
                    "Payment\\Method"
                ],
                "summary": "Retrieve payment methods by conditions",
                "operationId": "readAllPayment-method",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[name]",
                        "description": "Retrieve payment method by its name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[country]",
                        "name": "_cnd[country]",
                        "description": "Retrieve payment method by country",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[exCountry]",
                        "name": "_cnd[exCountry]",
                        "description": "Retrieve payment method by excluded country name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[moduleEnabled]",
                        "name": "_cnd[moduleEnabled]",
                        "description": "Retrieve payment method by module enabled state",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[added]",
                        "name": "_cnd[added]",
                        "description": "Retrieve payment method by its added\\not added state",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[onlyPureOffline]",
                        "name": "_cnd[onlyPureOffline]",
                        "description": "Get only offline methods",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[onlyModuleOffline]",
                        "name": "_cnd[onlyModuleOffline]",
                        "description": "Get only offline methods (added by module)",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                            }
                        }
                    }
                }
            }
        },
        "_path=payment-methodsetting/{id}": {
            "get": {
                "tags": [
                    "Payment\\MethodSetting"
                ],
                "summary": "Retrieve payment method setting by id",
                "operationId": "readPayment-methodsetting",
                "parameters": [
                    {
                        "parameter": "payment-methodsetting_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the MethodSetting object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\MethodSetting"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Payment\\MethodSetting"
                ],
                "summary": "Update payment method setting by id",
                "operationId": "updatePayment-methodsetting",
                "parameters": [
                    {
                        "parameter": "payment-methodsetting_body",
                        "name": "body",
                        "in": "body",
                        "description": "MethodSetting object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\MethodSetting"
                        }
                    },
                    {
                        "parameter": "payment-methodsetting_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the MethodSetting object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\MethodSetting"
                        }
                    }
                }
            }
        },
        "_path=payment-methodsetting": {
            "get": {
                "tags": [
                    "Payment\\MethodSetting"
                ],
                "summary": "Retrieve all payment method settings",
                "operationId": "readAllPayment-methodsetting",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Payment\\MethodSetting"
                            }
                        }
                    }
                }
            }
        },
        "_path=payment-transaction/0": {
            "post": {
                "tags": [
                    "Payment\\Transaction"
                ],
                "summary": "Add new payment transaction",
                "operationId": "createPayment-transaction",
                "parameters": [
                    {
                        "parameter": "payment-transaction_body",
                        "name": "body",
                        "in": "body",
                        "description": "Transaction object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    }
                }
            }
        },
        "_path=payment-transaction/{id}": {
            "get": {
                "tags": [
                    "Payment\\Transaction"
                ],
                "summary": "Retrieve payment transaction by id",
                "operationId": "readPayment-transaction",
                "parameters": [
                    {
                        "parameter": "payment-transaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Transaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Payment\\Transaction"
                ],
                "summary": "Update payment transaction by id",
                "operationId": "updatePayment-transaction",
                "parameters": [
                    {
                        "parameter": "payment-transaction_body",
                        "name": "body",
                        "in": "body",
                        "description": "Transaction object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    },
                    {
                        "parameter": "payment-transaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Transaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Payment\\Transaction"
                ],
                "summary": "Delete payment transaction by id",
                "operationId": "deletePayment-transaction",
                "parameters": [
                    {
                        "parameter": "payment-transaction_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Transaction object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                        }
                    }
                }
            }
        },
        "_path=payment-transaction": {
            "get": {
                "tags": [
                    "Payment\\Transaction"
                ],
                "summary": "Retrieve payment transactions by conditions",
                "operationId": "readAllPayment-transaction",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                            }
                        }
                    }
                }
            }
        },
        "_path=product/0": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Add new product",
                "operationId": "createProduct",
                "parameters": [
                    {
                        "parameter": "product_body",
                        "name": "body",
                        "in": "body",
                        "description": "Product object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    }
                }
            }
        },
        "_path=product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Retrieve product by id",
                "operationId": "readProduct",
                "parameters": [
                    {
                        "parameter": "product_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Product object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update product by id",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "parameter": "product_body",
                        "name": "body",
                        "in": "body",
                        "description": "Product object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    },
                    {
                        "parameter": "product_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Product object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete product by id",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "parameter": "product_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Product object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Product"
                        }
                    }
                }
            }
        },
        "_path=product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Retrieve product by conditions",
                "operationId": "readAllProduct",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[sKU]",
                        "name": "_cnd[sKU]",
                        "description": "Filters products by sku",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[enabled]",
                        "description": "Filters products by enabled\\disabled state",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[categoryId]",
                        "name": "_cnd[categoryId]",
                        "description": "Filters products by category id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[price]",
                        "name": "_cnd[price]",
                        "description": "Filters by min price (first item) and max price (second item)",
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[inventory]",
                        "name": "_cnd[inventory]",
                        "description": "Filters products by stock status (inventory)",
                        "type": "string",
                        "enum": [
                            "low",
                            "out",
                            "in"
                        ]
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[excludingProductId]",
                        "name": "_cnd[excludingProductId]",
                        "description": "Excludes products with given IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[arrivalDate]",
                        "name": "_cnd[arrivalDate]",
                        "description": "Filters products by arrival date (timestamp) arranged in two-value array [start, end]",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[arrivalDateRange]",
                        "name": "_cnd[arrivalDateRange]",
                        "description": "Filters products by arrival date in format of d-M-Y ~ d-M-Y",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Product"
                            }
                        }
                    }
                }
            }
        },
        "_path=productclass/0": {
            "post": {
                "tags": [
                    "ProductClass"
                ],
                "summary": "Add new product class",
                "operationId": "createProductclass",
                "parameters": [
                    {
                        "parameter": "productclass_body",
                        "name": "body",
                        "in": "body",
                        "description": "ProductClass object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    }
                }
            }
        },
        "_path=productclass/{id}": {
            "get": {
                "tags": [
                    "ProductClass"
                ],
                "summary": "Retrieve product class by id",
                "operationId": "readProductclass",
                "parameters": [
                    {
                        "parameter": "productclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ProductClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductClass"
                ],
                "summary": "Update product class by id",
                "operationId": "updateProductclass",
                "parameters": [
                    {
                        "parameter": "productclass_body",
                        "name": "body",
                        "in": "body",
                        "description": "ProductClass object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    },
                    {
                        "parameter": "productclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ProductClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductClass"
                ],
                "summary": "Delete product class by id",
                "operationId": "deleteProductclass",
                "parameters": [
                    {
                        "parameter": "productclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ProductClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ProductClass"
                        }
                    }
                }
            }
        },
        "_path=productclass": {
            "get": {
                "tags": [
                    "ProductClass"
                ],
                "summary": "Retrieve product classs by conditions",
                "operationId": "readAllProductclass",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\ProductClass"
                            }
                        }
                    }
                }
            }
        },
        "_path=profile/0": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Add new profile",
                "operationId": "createProfile",
                "parameters": [
                    {
                        "parameter": "profile_body",
                        "name": "body",
                        "in": "body",
                        "description": "Profile object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    }
                }
            }
        },
        "_path=profile/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve profile by id",
                "operationId": "readProfile",
                "parameters": [
                    {
                        "parameter": "profile_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Profile object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile by id",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "parameter": "profile_body",
                        "name": "body",
                        "in": "body",
                        "description": "Profile object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    },
                    {
                        "parameter": "profile_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Profile object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete profile by id",
                "operationId": "deleteProfile",
                "parameters": [
                    {
                        "parameter": "profile_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Profile object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Profile"
                        }
                    }
                }
            }
        },
        "_path=profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve profiles by conditions",
                "operationId": "readAllProfile",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[anonymous]",
                        "name": "_cnd[anonymous]",
                        "description": "Shows only anonymous (true) or registered (false) user profiles",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[orderId]",
                        "description": "Filters profiles by order id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[referer]",
                        "name": "_cnd[referer]",
                        "description": "Filters profiles by referer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[membership]",
                        "name": "_cnd[membership]",
                        "description": "Filters profiles by membership id",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[roles]",
                        "name": "_cnd[roles]",
                        "description": "Filters profiles by role(s)",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[permissions]",
                        "name": "_cnd[permissions]",
                        "description": "Filters profiles by available permission code(s)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[language]",
                        "name": "_cnd[language]",
                        "description": "Filters profiles by language",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[pattern]",
                        "name": "_cnd[pattern]",
                        "description": "Filters profiles by name or email substring",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[phone]",
                        "name": "_cnd[phone]",
                        "description": "Filters profiles by phone number",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[login]",
                        "name": "_cnd[login]",
                        "description": "Filters profiles by email (OR clause)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[andLogin]",
                        "name": "_cnd[andLogin]",
                        "description": "Filters profiles by email (AND clause)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[state]",
                        "name": "_cnd[state]",
                        "description": "Filters profiles by state id (for countries with states)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[customState]",
                        "name": "_cnd[customState]",
                        "description": "Filters profiles by custom state name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[address]",
                        "name": "_cnd[address]",
                        "description": "Filters profiles by address id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[userType]",
                        "name": "_cnd[userType]",
                        "description": "Filters profiles by user type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[onlyReal]",
                        "name": "_cnd[onlyReal]",
                        "description": "Exclude profile copies (snapshots for certain order)",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Profile"
                            }
                        }
                    }
                }
            }
        },
        "_path=region/0": {
            "post": {
                "tags": [
                    "Region"
                ],
                "summary": "Add new region",
                "operationId": "createRegion",
                "parameters": [
                    {
                        "parameter": "region_body",
                        "name": "body",
                        "in": "body",
                        "description": "Region object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    }
                }
            }
        },
        "_path=region/{id}": {
            "get": {
                "tags": [
                    "Region"
                ],
                "summary": "Retrieve region by id",
                "operationId": "readRegion",
                "parameters": [
                    {
                        "parameter": "region_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Region object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Region"
                ],
                "summary": "Update region by id",
                "operationId": "updateRegion",
                "parameters": [
                    {
                        "parameter": "region_body",
                        "name": "body",
                        "in": "body",
                        "description": "Region object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    },
                    {
                        "parameter": "region_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Region object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Region"
                ],
                "summary": "Delete region by id",
                "operationId": "deleteRegion",
                "parameters": [
                    {
                        "parameter": "region_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Region object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Region"
                        }
                    }
                }
            }
        },
        "_path=region": {
            "get": {
                "tags": [
                    "Region"
                ],
                "summary": "Retrieve regions by conditions",
                "operationId": "readAllRegion",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Region"
                            }
                        }
                    }
                }
            }
        },
        "_path=role-permission/{id}": {
            "get": {
                "tags": [
                    "Role\\Permission"
                ],
                "summary": "Retrieve user permission type by id",
                "operationId": "readRole-permission",
                "parameters": [
                    {
                        "parameter": "role-permission_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Permission object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role\\Permission"
                        }
                    }
                }
            }
        },
        "_path=role-permission": {
            "get": {
                "tags": [
                    "Role\\Permission"
                ],
                "summary": "Retrieve all user permission types",
                "operationId": "readAllRole-permission",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Role\\Permission"
                            }
                        }
                    }
                }
            }
        },
        "_path=role/0": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Add new user role",
                "operationId": "createRole",
                "parameters": [
                    {
                        "parameter": "role_body",
                        "name": "body",
                        "in": "body",
                        "description": "Role object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    }
                }
            }
        },
        "_path=role/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Retrieve user role by id",
                "operationId": "readRole",
                "parameters": [
                    {
                        "parameter": "role_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Role object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update user role by id",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "parameter": "role_body",
                        "name": "body",
                        "in": "body",
                        "description": "Role object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    },
                    {
                        "parameter": "role_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Role object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete user role by id",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "parameter": "role_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Role object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Role"
                        }
                    }
                }
            }
        },
        "_path=role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Retrieve user roles by conditions",
                "operationId": "readAllRole",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Role"
                            }
                        }
                    }
                }
            }
        },
        "_path=shipping-markup/0": {
            "post": {
                "tags": [
                    "Shipping\\Markup"
                ],
                "summary": "Add new shipping markup",
                "operationId": "createShipping-markup",
                "parameters": [
                    {
                        "parameter": "shipping-markup_body",
                        "name": "body",
                        "in": "body",
                        "description": "Markup object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    }
                }
            }
        },
        "_path=shipping-markup/{id}": {
            "get": {
                "tags": [
                    "Shipping\\Markup"
                ],
                "summary": "Retrieve shipping markup by id",
                "operationId": "readShipping-markup",
                "parameters": [
                    {
                        "parameter": "shipping-markup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Markup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Shipping\\Markup"
                ],
                "summary": "Update shipping markup by id",
                "operationId": "updateShipping-markup",
                "parameters": [
                    {
                        "parameter": "shipping-markup_body",
                        "name": "body",
                        "in": "body",
                        "description": "Markup object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    },
                    {
                        "parameter": "shipping-markup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Markup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shipping\\Markup"
                ],
                "summary": "Delete shipping markup by id",
                "operationId": "deleteShipping-markup",
                "parameters": [
                    {
                        "parameter": "shipping-markup_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Markup object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                        }
                    }
                }
            }
        },
        "_path=shipping-markup": {
            "get": {
                "tags": [
                    "Shipping\\Markup"
                ],
                "summary": "Retrieve shipping markups by conditions",
                "operationId": "readAllShipping-markup",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                            }
                        }
                    }
                }
            }
        },
        "_path=shipping-method/0": {
            "post": {
                "tags": [
                    "Shipping\\Method"
                ],
                "summary": "Add new shipping methods",
                "operationId": "createShipping-method",
                "parameters": [
                    {
                        "parameter": "shipping-method_body",
                        "name": "body",
                        "in": "body",
                        "description": "Method object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    }
                }
            }
        },
        "_path=shipping-method/{id}": {
            "get": {
                "tags": [
                    "Shipping\\Method"
                ],
                "summary": "Retrieve shipping methods by id",
                "operationId": "readShipping-method",
                "parameters": [
                    {
                        "parameter": "shipping-method_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Method object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Shipping\\Method"
                ],
                "summary": "Update shipping methods by id",
                "operationId": "updateShipping-method",
                "parameters": [
                    {
                        "parameter": "shipping-method_body",
                        "name": "body",
                        "in": "body",
                        "description": "Method object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    },
                    {
                        "parameter": "shipping-method_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Method object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shipping\\Method"
                ],
                "summary": "Delete shipping methods by id",
                "operationId": "deleteShipping-method",
                "parameters": [
                    {
                        "parameter": "shipping-method_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Method object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                        }
                    }
                }
            }
        },
        "_path=shipping-method": {
            "get": {
                "tags": [
                    "Shipping\\Method"
                ],
                "summary": "Retrieve shipping methods by conditions",
                "operationId": "readAllShipping-method",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                            }
                        }
                    }
                }
            }
        },
        "_path=state/0": {
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Add new state",
                "operationId": "createState",
                "parameters": [
                    {
                        "parameter": "state_body",
                        "name": "body",
                        "in": "body",
                        "description": "State object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    }
                }
            }
        },
        "_path=state/{id}": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Retrieve state by id",
                "operationId": "readState",
                "parameters": [
                    {
                        "parameter": "state_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the State object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "State"
                ],
                "summary": "Update state by id",
                "operationId": "updateState",
                "parameters": [
                    {
                        "parameter": "state_body",
                        "name": "body",
                        "in": "body",
                        "description": "State object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    },
                    {
                        "parameter": "state_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the State object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Delete state by id",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "parameter": "state_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the State object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\State"
                        }
                    }
                }
            }
        },
        "_path=state": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Retrieve states by conditions",
                "operationId": "readAllState",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[countryCode]",
                        "name": "_cnd[countryCode]",
                        "description": "Filters states by country code",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "name": "_cnd[substring]",
                        "description": "Filters states by substring",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\State"
                            }
                        }
                    }
                }
            }
        },
        "_path=taxclass/0": {
            "post": {
                "tags": [
                    "TaxClass"
                ],
                "summary": "Add new tax class",
                "operationId": "createTaxclass",
                "parameters": [
                    {
                        "parameter": "taxclass_body",
                        "name": "body",
                        "in": "body",
                        "description": "TaxClass object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    }
                }
            }
        },
        "_path=taxclass/{id}": {
            "get": {
                "tags": [
                    "TaxClass"
                ],
                "summary": "Retrieve tax class by id",
                "operationId": "readTaxclass",
                "parameters": [
                    {
                        "parameter": "taxclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TaxClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TaxClass"
                ],
                "summary": "Update tax class by id",
                "operationId": "updateTaxclass",
                "parameters": [
                    {
                        "parameter": "taxclass_body",
                        "name": "body",
                        "in": "body",
                        "description": "TaxClass object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    },
                    {
                        "parameter": "taxclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TaxClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxClass"
                ],
                "summary": "Delete tax class by id",
                "operationId": "deleteTaxclass",
                "parameters": [
                    {
                        "parameter": "taxclass_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TaxClass object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TaxClass"
                        }
                    }
                }
            }
        },
        "_path=taxclass": {
            "get": {
                "tags": [
                    "TaxClass"
                ],
                "summary": "Retrieve tax classes by conditions",
                "operationId": "readAllTaxclass",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\TaxClass"
                            }
                        }
                    }
                }
            }
        },
        "_path=tmpvar/0": {
            "post": {
                "tags": [
                    "TmpVar"
                ],
                "summary": "Add new temporary variable",
                "operationId": "createTmpvar",
                "parameters": [
                    {
                        "parameter": "tmpvar_body",
                        "name": "body",
                        "in": "body",
                        "description": "TmpVar object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    }
                }
            }
        },
        "_path=tmpvar/{id}": {
            "get": {
                "tags": [
                    "TmpVar"
                ],
                "summary": "Retrieve temporary variable by id",
                "operationId": "readTmpvar",
                "parameters": [
                    {
                        "parameter": "tmpvar_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TmpVar object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TmpVar"
                ],
                "summary": "Update temporary variable by id",
                "operationId": "updateTmpvar",
                "parameters": [
                    {
                        "parameter": "tmpvar_body",
                        "name": "body",
                        "in": "body",
                        "description": "TmpVar object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    },
                    {
                        "parameter": "tmpvar_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TmpVar object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TmpVar"
                ],
                "summary": "Delete temporary variable by id",
                "operationId": "deleteTmpvar",
                "parameters": [
                    {
                        "parameter": "tmpvar_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the TmpVar object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\TmpVar"
                        }
                    }
                }
            }
        },
        "_path=tmpvar": {
            "get": {
                "tags": [
                    "TmpVar"
                ],
                "summary": "Retrieve all temporary variables",
                "operationId": "readAllTmpvar",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\TmpVar"
                            }
                        }
                    }
                }
            }
        },
        "_path=viewlist/{id}": {
            "get": {
                "tags": [
                    "ViewList"
                ],
                "summary": "Retrieve view list item by id",
                "operationId": "readViewlist",
                "parameters": [
                    {
                        "parameter": "viewlist_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ViewList object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ViewList"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ViewList"
                ],
                "summary": "Update view list item by id",
                "operationId": "updateViewlist",
                "parameters": [
                    {
                        "parameter": "viewlist_body",
                        "name": "body",
                        "in": "body",
                        "description": "ViewList object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ViewList"
                        }
                    },
                    {
                        "parameter": "viewlist_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ViewList object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ViewList"
                        }
                    }
                }
            }
        },
        "_path=viewlist": {
            "get": {
                "tags": [
                    "ViewList"
                ],
                "summary": "Retrieve all view list items",
                "operationId": "readAllViewlist",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\ViewList"
                            }
                        }
                    }
                }
            }
        },
        "_path=zone/0": {
            "post": {
                "tags": [
                    "Zone"
                ],
                "summary": "Add new shipping zone",
                "operationId": "createZone",
                "parameters": [
                    {
                        "parameter": "zone_body",
                        "name": "body",
                        "in": "body",
                        "description": "Zone object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    }
                }
            }
        },
        "_path=zone/{id}": {
            "get": {
                "tags": [
                    "Zone"
                ],
                "summary": "Retrieve shipping zone by id",
                "operationId": "readZone",
                "parameters": [
                    {
                        "parameter": "zone_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Zone object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Zone"
                ],
                "summary": "Update shipping zone by id",
                "operationId": "updateZone",
                "parameters": [
                    {
                        "parameter": "zone_body",
                        "name": "body",
                        "in": "body",
                        "description": "Zone object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    },
                    {
                        "parameter": "zone_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Zone object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Zone"
                ],
                "summary": "Delete shipping zone by id",
                "operationId": "deleteZone",
                "parameters": [
                    {
                        "parameter": "zone_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the Zone object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\Zone"
                        }
                    }
                }
            }
        },
        "_path=zone": {
            "get": {
                "tags": [
                    "Zone"
                ],
                "summary": "Retrieve all shipping zones",
                "operationId": "readAllZone",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\Zone"
                            }
                        }
                    }
                }
            }
        },
        "_path=zoneelement/0": {
            "post": {
                "tags": [
                    "ZoneElement"
                ],
                "summary": "Add new shipping zone element",
                "operationId": "createZoneelement",
                "parameters": [
                    {
                        "parameter": "zoneelement_body",
                        "name": "body",
                        "in": "body",
                        "description": "ZoneElement object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    }
                }
            }
        },
        "_path=zoneelement/{id}": {
            "get": {
                "tags": [
                    "ZoneElement"
                ],
                "summary": "Retrieve shipping zone element by id",
                "operationId": "readZoneelement",
                "parameters": [
                    {
                        "parameter": "zoneelement_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ZoneElement object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ZoneElement"
                ],
                "summary": "Update shipping zone element by id",
                "operationId": "updateZoneelement",
                "parameters": [
                    {
                        "parameter": "zoneelement_body",
                        "name": "body",
                        "in": "body",
                        "description": "ZoneElement object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    },
                    {
                        "parameter": "zoneelement_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ZoneElement object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ZoneElement"
                ],
                "summary": "Delete shipping zone element by id",
                "operationId": "deleteZoneelement",
                "parameters": [
                    {
                        "parameter": "zoneelement_id",
                        "name": "id",
                        "in": "path",
                        "description": "Id value of the ZoneElement object",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                        }
                    }
                }
            }
        },
        "_path=zoneelement": {
            "get": {
                "tags": [
                    "ZoneElement"
                ],
                "summary": "Retrieve all shipping zone elements",
                "operationId": "readAllZoneelement",
                "parameters": [
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[limit]",
                        "name": "_cnd[limit]",
                        "description": "Sets the offset (first item) and the limit (second item)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "required": false,
                        "parameter": "_cnd[orderBy]",
                        "name": "_cnd[orderBy]",
                        "description": "Sets sorting order field",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "XLite\\Model\\AccessControlCell": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "hash": {
                    "description": "Cell hash",
                    "type": "string"
                },
                "access_control_entities": {
                    "description": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AccessControlEntity"
                    }
                },
                "access_control_zones": {
                    "description": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AccessControlZone"
                    }
                },
                "returnData": {
                    "description": "Cell hash",
                    "type": "string"
                },
                "resendMethod": {
                    "description": "Method that executes on resend action",
                    "type": "string"
                },
                "date": {
                    "description": "Creation date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AccessControlEntity": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "uid": {
                    "description": "Unique entity identifier",
                    "type": "integer"
                },
                "type": {
                    "description": "Entity type",
                    "$ref": "#/definitions/XLite\\Model\\AccessControlEntityType"
                },
                "cell": {
                    "description": "Cell",
                    "$ref": "#/definitions/XLite\\Model\\AccessControlCell"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AccessControlEntityType": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "type": {
                    "description": "Entity class",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AccessControlZone": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "cell": {
                    "description": "Cell",
                    "$ref": "#/definitions/XLite\\Model\\AccessControlCell"
                },
                "type": {
                    "description": "Zone",
                    "$ref": "#/definitions/XLite\\Model\\AccessControlZoneType"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AccessControlZoneType": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Zone name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Address": {
            "properties": {
                "addressFields": {
                    "description": "Address fields collection",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AddressFieldValue"
                    }
                },
                "is_billing": {
                    "description": "Flag: is it a billing address",
                    "type": "boolean"
                },
                "is_shipping": {
                    "description": "Flag: is it a shipping address",
                    "type": "boolean"
                },
                "isWork": {
                    "description": "Flag: is it a work address",
                    "type": "boolean"
                },
                "profile": {
                    "description": "Profile: many-to-one relation with profile entity",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "address_id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "address_type": {
                    "description": "Address type: residential/commercial",
                    "type": "string",
                    "x-length": 1
                },
                "state": {
                    "description": "State",
                    "$ref": "#/definitions/XLite\\Model\\State"
                },
                "country": {
                    "description": "Country",
                    "$ref": "#/definitions/XLite\\Model\\Country"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AddressField": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "serviceName": {
                    "description": "Service name for address field\nFor example: firstname, lastname, country_code and so on.\n\nThe field is named with this value in the address forms.\nAlso the \"service-name-{$serviceName}\" CSS class is added to the field",
                    "type": "string",
                    "x-length": 128
                },
                "viewGetterName": {
                    "description": "Getter name for address field (for AView::getAddressSectionData)\nFor example:\ncountry for country_code\nstate for state_id, custom_state\n\nThe field is named with this value in the address forms.\nAlso the \"service-name-{$serviceName}\" CSS class is added to the field",
                    "type": "string",
                    "x-length": 128
                },
                "schemaClass": {
                    "description": "Schema class for \"Form field widget\".\nThis class will be used in form widgets\n\nPossible values are:\n\n\\XLite\\View\\FormField\\Input\\Text\n\\XLite\\View\\FormField\\Select\\Country\n\\XLite\\View\\FormField\\Select\\Title\n\nFor more information check \"\\XLite\\View\\FormField\\*\" class family.\n\nThe '\\XLite\\View\\FormField\\Input\\Text' class (standard input text field)\nis taken for additional fields by default.",
                    "type": "string",
                    "x-length": 256
                },
                "additional": {
                    "description": "Flag if the field is an additional one (This field could be removed)",
                    "type": "boolean"
                },
                "required": {
                    "description": "Flag if the field is a required one",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Flag if the field is an enabled one",
                    "type": "boolean"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AddressFieldTranslation": {
            "properties": {
                "name": {
                    "description": "Field name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AddressFieldValue": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "value": {
                    "description": "Additional field value",
                    "type": "string",
                    "x-length": 255
                },
                "addressField": {
                    "description": "Address field model relation",
                    "$ref": "#/definitions/XLite\\Model\\AddressField"
                },
                "address": {
                    "description": "Address model relation",
                    "$ref": "#/definitions/XLite\\Model\\Address"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Attribute": {
            "properties": {
                "visible": {
                    "description": "Flag if attribute is visible in product filter",
                    "type": "boolean"
                },
                "variantsProducts": {
                    "description": "Variants products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Product"
                    }
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "decimals": {
                    "description": "Decimals",
                    "type": "integer",
                    "x-length": 1
                },
                "productClass": {
                    "description": "Product class",
                    "$ref": "#/definitions/XLite\\Model\\ProductClass"
                },
                "attributeGroup": {
                    "description": "Attribute group",
                    "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                },
                "attribute_options": {
                    "description": "Attribute options",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                    }
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "type": {
                    "description": "Option type",
                    "type": "string",
                    "x-length": 1
                },
                "addToNew": {
                    "description": "Add to new products or class\u2019s assigns automatically",
                    "type": "string",
                    "x-length": 1
                },
                "attribute_properties": {
                    "description": "Attribute properties",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeProperty"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeGroup": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "productClass": {
                    "description": "Product class",
                    "$ref": "#/definitions/XLite\\Model\\ProductClass"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Attribute"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeGroupTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeOption": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "attribute": {
                    "description": "Attribute",
                    "$ref": "#/definitions/XLite\\Model\\Attribute"
                },
                "addToNew": {
                    "description": "Add to new products or class\u2019s assigns automatically",
                    "type": "boolean"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeOptionTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeProperty": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "attribute": {
                    "description": "Attribute",
                    "$ref": "#/definitions/XLite\\Model\\Attribute"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "unit": {
                    "description": "Unit",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueCheckbox": {
            "properties": {
                "variants": {
                    "description": "Variants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                    }
                },
                "value": {
                    "description": "Value",
                    "type": "boolean"
                },
                "priceModifier": {
                    "description": "Price modifier",
                    "type": "string"
                },
                "priceModifierType": {
                    "description": "Price modifier type",
                    "type": "string",
                    "x-length": 1
                },
                "weightModifier": {
                    "description": "Weight modifier",
                    "type": "string"
                },
                "weightModifierType": {
                    "description": "Weight modifier type",
                    "type": "string",
                    "x-length": 1
                },
                "defaultValue": {
                    "description": "Default flag",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "attribute": {
                    "description": "Attribute",
                    "$ref": "#/definitions/XLite\\Model\\Attribute"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueCheckboxTranslation": {
            "properties": {
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueSelect": {
            "properties": {
                "variants": {
                    "description": "Variants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                    }
                },
                "attribute_option": {
                    "description": "Attribute option",
                    "$ref": "#/definitions/XLite\\Model\\AttributeOption"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "priceModifier": {
                    "description": "Price modifier",
                    "type": "string"
                },
                "priceModifierType": {
                    "description": "Price modifier type",
                    "type": "string",
                    "x-length": 1
                },
                "weightModifier": {
                    "description": "Weight modifier",
                    "type": "string"
                },
                "weightModifierType": {
                    "description": "Weight modifier type",
                    "type": "string",
                    "x-length": 1
                },
                "defaultValue": {
                    "description": "Default flag",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "attribute": {
                    "description": "Attribute",
                    "$ref": "#/definitions/XLite\\Model\\Attribute"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueSelectTranslation": {
            "properties": {
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueText": {
            "properties": {
                "editable": {
                    "description": "Editable flag",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "attribute": {
                    "description": "Attribute",
                    "$ref": "#/definitions/XLite\\Model\\Attribute"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\AttributeValue\\AttributeValueTextTranslation": {
            "properties": {
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\BannerRotationSlide": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Enabled status",
                    "type": "boolean"
                },
                "image": {
                    "description": "Image",
                    "$ref": "#/definitions/XLite\\Model\\Image\\BannerRotationImage"
                },
                "link": {
                    "description": "Link",
                    "type": "string"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Cart": {
            "properties": {
                "usedCoupons": {
                    "description": "Used coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\UsedCoupon"
                    }
                },
                "uspsShipment": {
                    "description": "USPS Shipments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\USPS\\Model\\Shipment"
                    }
                },
                "capostParcels": {
                    "description": "Canada Post parcels (reference to the Canada Post parcels model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel"
                    }
                },
                "capostReturns": {
                    "description": "Reference to the Canada Post returns model",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn"
                    }
                },
                "capostOffice": {
                    "description": "Reference to the Canada Post post office model",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\PostOffice"
                },
                "giftWrapping": {
                    "type": "boolean"
                },
                "greetingMessage": {
                    "type": "string"
                },
                "mailchimpStoreId": {
                    "description": "Mailchimp store id",
                    "type": "string",
                    "x-length": 255
                },
                "mandrill_mails": {
                    "description": "Mandrill e-mail messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\Mandrill\\Model\\MandrillMail"
                    }
                },
                "not_finished_order": {
                    "description": "Order link to not finished order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "pbOrder": {
                    "description": "Pitney Bowes order association",
                    "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\PBOrder"
                },
                "conversation": {
                    "description": "Conversation",
                    "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Conversation"
                },
                "order_id": {
                    "description": "Order unique id",
                    "type": "integer"
                },
                "profile": {
                    "description": "Order profile",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "orig_profile": {
                    "description": "Original profile",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "shipping_id": {
                    "description": "Shipping method unique id",
                    "type": "integer"
                },
                "shipping_method_name": {
                    "description": "Shipping method name",
                    "type": "string"
                },
                "payment_method_name": {
                    "description": "Payment method name",
                    "type": "string"
                },
                "tracking": {
                    "description": "Shipping tracking code",
                    "type": "string",
                    "x-length": 32
                },
                "date": {
                    "description": "Order creation timestamp",
                    "type": "integer"
                },
                "lastRenewDate": {
                    "description": "Last order renew date",
                    "type": "integer"
                },
                "paymentStatus": {
                    "description": "Payment status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                },
                "shippingStatus": {
                    "description": "Shipping status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                },
                "notes": {
                    "description": "Customer notes",
                    "type": "string"
                },
                "adminNotes": {
                    "description": "Admin notes",
                    "type": "string"
                },
                "details": {
                    "description": "Order details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderDetail"
                    }
                },
                "trackingNumbers": {
                    "description": "Order tracking numbers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                    }
                },
                "events": {
                    "description": "Order events queue",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                    }
                },
                "items": {
                    "description": "Order items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem"
                    }
                },
                "surcharges": {
                    "description": "Order surcharges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                    }
                },
                "payment_transactions": {
                    "description": "Payment transactions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                    }
                },
                "currency": {
                    "description": "Currency",
                    "$ref": "#/definitions/XLite\\Model\\Currency"
                },
                "orderNumber": {
                    "description": "Unique order identificator (it is working for orders only, not for cart entities)",
                    "type": "string",
                    "x-length": 255
                },
                "recent": {
                    "description": "Recent flag: true if order's statuses were not changed manually by an administrator, otherwise - false",
                    "type": "boolean"
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                },
                "total": {
                    "description": "Total",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Subtotal",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Category\\QuickFlags": {
            "properties": {
                "id": {
                    "description": "Doctrine ID",
                    "type": "integer"
                },
                "subcategories_count_all": {
                    "description": "Total number of subcategories",
                    "type": "integer"
                },
                "subcategories_count_enabled": {
                    "description": "Number of enabled subcategories",
                    "type": "integer"
                },
                "category": {
                    "description": "Relation to a category entity",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Category": {
            "properties": {
                "coupons": {
                    "description": "Coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\Coupon"
                    }
                },
                "featuredProducts": {
                    "description": "Featured products (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\FeaturedProducts\\Model\\FeaturedProduct"
                    }
                },
                "ogMeta": {
                    "description": "Custom Open graph meta tags",
                    "type": "string"
                },
                "useCustomOG": {
                    "description": "User Open graph meta tags generator flag",
                    "type": "boolean"
                },
                "productClasses": {
                    "description": "Category classes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\ProductClass"
                    }
                },
                "useClasses": {
                    "description": "Status code",
                    "type": "string",
                    "x-length": 1
                },
                "category_id": {
                    "description": "Node unique ID",
                    "type": "integer"
                },
                "lpos": {
                    "description": "Node left value",
                    "type": "integer"
                },
                "rpos": {
                    "description": "Node right value",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Node status",
                    "type": "boolean"
                },
                "show_title": {
                    "description": "Whether to display the category title, or not",
                    "type": "boolean"
                },
                "depth": {
                    "description": "Category \"depth\" in the tree",
                    "type": "integer"
                },
                "pos": {
                    "description": "Category position parameter. Sort inside the parent category",
                    "type": "integer"
                },
                "root_category_look": {
                    "description": "Whether to display the category title, or not",
                    "type": "string",
                    "x-length": 32
                },
                "quickFlags": {
                    "description": "Some cached flags",
                    "$ref": "#/definitions/XLite\\Model\\Category\\QuickFlags"
                },
                "memberships": {
                    "description": "Memberships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Membership"
                    }
                },
                "image": {
                    "description": "One-to-one relation with category_images table",
                    "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Image"
                },
                "banner": {
                    "description": "One-to-one relation with category_images table",
                    "$ref": "#/definitions/XLite\\Model\\Image\\Category\\Banner"
                },
                "categoryProducts": {
                    "description": "Relation to a CategoryProducts entities",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CategoryProducts"
                    }
                },
                "children": {
                    "description": "Child categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Category"
                    }
                },
                "parent": {
                    "description": "Parent category",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                },
                "cleanURLs": {
                    "description": "Clean URLs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CleanURL"
                    }
                },
                "metaDescType": {
                    "description": "Meta description type",
                    "type": "string",
                    "x-length": 1
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                },
                "lastUsage": {
                    "description": "Last usage timestamp (assign products event)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\CategoryProducts": {
            "properties": {
                "id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "orderby": {
                    "description": "Product position in the category",
                    "type": "integer",
                    "x-length": 11
                },
                "category": {
                    "description": "Relation to a category entity"
                },
                "product": {
                    "description": "Relation to a product entity"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\CategoryTranslation": {
            "properties": {
                "name": {
                    "description": "Category name",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "Category description",
                    "type": "string"
                },
                "metaTags": {
                    "description": "Category meta keywords",
                    "type": "string",
                    "x-length": 255
                },
                "metaDesc": {
                    "description": "Category meta description",
                    "type": "string"
                },
                "metaTitle": {
                    "description": "Value of the title HTML-tag for category page",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\CleanURL": {
            "properties": {
                "page": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Page"
                },
                "newsMessage": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\News\\Model\\NewsMessage"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "category": {
                    "description": "Relation to a category entity",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                },
                "cleanURL": {
                    "description": "Clean URL",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Config": {
            "properties": {
                "config_id": {
                    "description": "Option unique name",
                    "type": "integer"
                },
                "name": {
                    "description": "Option name",
                    "type": "string",
                    "x-length": 32
                },
                "category": {
                    "description": "Option category",
                    "type": "string",
                    "x-length": 64
                },
                "type": {
                    "description": "Option type\nAllowed values:'','text','textarea','checkbox','country','state','select','serialized','separator'\nor form field class name",
                    "type": "string",
                    "x-length": 128
                },
                "orderby": {
                    "description": "Option position within category",
                    "type": "integer"
                },
                "value": {
                    "description": "Option value",
                    "type": "string"
                },
                "widgetParameters": {
                    "description": "Widget parameters",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ConfigTranslation": {
            "properties": {
                "option_name": {
                    "description": "Human-readable option name",
                    "type": "string",
                    "x-length": 255
                },
                "option_comment": {
                    "description": "Option comment",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Country": {
            "properties": {
                "restrictions": {
                    "description": "restrictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\ProductRestriction"
                    }
                },
                "code": {
                    "description": "Country code (ISO 3166-1 alpha-2)",
                    "type": "string",
                    "x-length": 2
                },
                "id": {
                    "description": "Country code (ISO 3166-1 numeric)",
                    "type": "integer"
                },
                "code3": {
                    "description": "Country code (ISO 3166-1 alpha-3)",
                    "type": "string",
                    "x-length": 3
                },
                "enabled": {
                    "description": "Enabled falg",
                    "type": "boolean"
                },
                "states": {
                    "description": "States (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\State"
                    }
                },
                "regions": {
                    "description": "Regions (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Region"
                    }
                },
                "currency": {
                    "description": "Currency",
                    "$ref": "#/definitions/XLite\\Model\\Currency"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\CountryTranslation": {
            "properties": {
                "country": {
                    "description": "Country name",
                    "type": "string",
                    "x-length": 64
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Currency": {
            "properties": {
                "currency_id": {
                    "description": "Currency unique id (ISO 4217 number)",
                    "type": "integer"
                },
                "code": {
                    "description": "Currency code (ISO 4217 alpha-3)",
                    "type": "string",
                    "x-length": 3
                },
                "symbol": {
                    "description": "Symbol",
                    "type": "string",
                    "x-length": 16
                },
                "prefix": {
                    "description": "Prefix",
                    "type": "string",
                    "x-length": 32
                },
                "suffix": {
                    "description": "Suffix",
                    "type": "string",
                    "x-length": 32
                },
                "e": {
                    "description": "Number of digits after the decimal separator.",
                    "type": "string"
                },
                "decimalDelimiter": {
                    "description": "Decimal part delimiter",
                    "type": "string",
                    "x-length": 8
                },
                "thousandDelimiter": {
                    "description": "Thousand delimier",
                    "type": "string",
                    "x-length": 8
                },
                "orders": {
                    "description": "Orders",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Order"
                    }
                },
                "countries": {
                    "description": "Countries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Country"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\CurrencyTranslation": {
            "properties": {
                "name": {
                    "description": "Currency name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\DataSource\\Parameter": {
            "properties": {
                "dataSource": {
                    "description": "DataSource (relation)",
                    "$ref": "#/definitions/XLite\\Model\\DataSource"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Parameter name",
                    "type": "string"
                },
                "value": {
                    "description": "Semi-serialized parameter value representation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\DataSource": {
            "properties": {
                "id": {
                    "description": "Unique data source id",
                    "type": "integer"
                },
                "type": {
                    "description": "Data source type",
                    "type": "string",
                    "x-length": 255
                },
                "parameters": {
                    "description": "Data source parameters (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\DataSource\\Parameter"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\EntityTypeVersion": {
            "properties": {
                "id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "entityType": {
                    "description": "Entity FQCN",
                    "type": "string",
                    "x-length": 255
                },
                "version": {
                    "description": "Entity type version",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\EventTask": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Event name",
                    "type": "string",
                    "x-length": 128
                },
                "arguments": {
                    "description": "Event narguments",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\FormId": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "form_id": {
                    "description": "Form unique id",
                    "type": "string",
                    "x-length": 32
                },
                "date": {
                    "description": "Date",
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/XLite\\Model\\Session"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\IframeContent": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "url": {
                    "description": "Form URL",
                    "type": "string"
                },
                "method": {
                    "description": "Form method",
                    "type": "string",
                    "x-length": 16
                },
                "data": {
                    "description": "Form data",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Image\\BannerRotationImage": {
            "properties": {
                "bannerRotationSlide": {
                    "description": "Relation to a BannerRotationSlide entity",
                    "$ref": "#/definitions/XLite\\Model\\BannerRotationSlide"
                },
                "alt": {
                    "description": "Alternative image text",
                    "type": "string",
                    "x-length": 255
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Image\\Category\\Banner": {
            "properties": {
                "category": {
                    "description": "Relation to a category entity",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                },
                "alt": {
                    "description": "Alternative image text",
                    "type": "string",
                    "x-length": 255
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Image\\Category\\Image": {
            "properties": {
                "category": {
                    "description": "Relation to a category entity",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                },
                "alt": {
                    "description": "Alternative image text",
                    "type": "string",
                    "x-length": 255
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Image\\Content": {
            "properties": {
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Image\\Product\\Image": {
            "properties": {
                "orderby": {
                    "description": "Image position",
                    "type": "integer"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "alt": {
                    "description": "Alternative image text",
                    "type": "string",
                    "x-length": 255
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ImageSettings": {
            "properties": {
                "id": {
                    "description": "Unique Id",
                    "type": "integer"
                },
                "code": {
                    "description": "Image size code",
                    "type": "string",
                    "x-length": 64
                },
                "model": {
                    "description": "Model (class name of image model)",
                    "type": "string",
                    "x-length": 200
                },
                "moduleName": {
                    "description": "Skin module name - owner of image sizes",
                    "type": "string",
                    "x-length": 200
                },
                "width": {
                    "description": "Image max width",
                    "type": "integer"
                },
                "height": {
                    "description": "Image max height",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ImportLog": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "date": {
                    "description": "Date",
                    "type": "integer"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 32
                },
                "arguments": {
                    "description": "Arguments",
                    "type": "array"
                },
                "file": {
                    "description": "File",
                    "type": "string"
                },
                "row": {
                    "description": "Row",
                    "type": "integer"
                },
                "processor": {
                    "description": "Processor",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Language": {
            "properties": {
                "lng_id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Language alpha-2 code (ISO 639-2)",
                    "type": "string",
                    "x-length": 2
                },
                "code3": {
                    "description": "Language alpha-3 code (ISO 639-3)",
                    "type": "string",
                    "x-length": 3
                },
                "r2l": {
                    "description": "Right-to-left flag",
                    "type": "boolean"
                },
                "added": {
                    "description": "Language status (added/not added)",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Language state (enabled/disabled)",
                    "type": "boolean"
                },
                "module": {
                    "description": "Related module (Author\\Name)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\LanguageLabel": {
            "properties": {
                "label_id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "name": {
                    "description": "Label name",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Model\\LanguageLabelTranslation": {
            "properties": {
                "label": {
                    "description": "Label",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\LanguageTranslation": {
            "properties": {
                "name": {
                    "description": "Language name",
                    "type": "string",
                    "x-length": 64
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Measure": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "date": {
                    "description": "Date (UNIX timestamp)",
                    "type": "integer"
                },
                "fsTime": {
                    "description": "File system test : time (msec.)",
                    "type": "integer"
                },
                "dbTime": {
                    "description": "Database test : time (msec.)",
                    "type": "integer"
                },
                "cpuTime": {
                    "description": "Camputation test : time (msec.)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\MeasureDump": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "data": {
                    "description": "Data",
                    "type": "string"
                },
                "text": {
                    "description": "Big data",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Membership": {
            "properties": {
                "coupons": {
                    "description": "Coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\Coupon"
                    }
                },
                "membership_id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Enabled status",
                    "type": "boolean"
                },
                "quickData": {
                    "description": "Quick data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\QuickData"
                    }
                },
                "categories": {
                    "description": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Category"
                    }
                },
                "products": {
                    "description": "Products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Product"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\MembershipTranslation": {
            "properties": {
                "name": {
                    "description": "Membership name",
                    "type": "string",
                    "x-length": 128
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Module": {
            "properties": {
                "moduleID": {
                    "description": "Module ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 64
                },
                "author": {
                    "description": "Author",
                    "type": "string",
                    "x-length": 64
                },
                "authorEmail": {
                    "description": "Author",
                    "type": "string",
                    "x-length": 255
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "installed": {
                    "description": "Installed status",
                    "type": "boolean"
                },
                "yamlLoaded": {
                    "description": "install.yaml file load status",
                    "type": "boolean"
                },
                "date": {
                    "description": "Order creation timestamp",
                    "type": "integer"
                },
                "rating": {
                    "description": "Rating",
                    "type": "string"
                },
                "votes": {
                    "description": "Votes",
                    "type": "integer"
                },
                "downloads": {
                    "description": "Downloads",
                    "type": "integer"
                },
                "price": {
                    "description": "Price",
                    "type": "string"
                },
                "currency": {
                    "description": "Currency code",
                    "type": "string",
                    "x-length": 3
                },
                "majorVersion": {
                    "description": "Major version",
                    "type": "string",
                    "x-length": 8
                },
                "minorVersion": {
                    "description": "Minor version",
                    "type": "integer"
                },
                "build": {
                    "description": "Version build number (4th digit of version number)",
                    "type": "integer"
                },
                "minorRequiredCoreVersion": {
                    "description": "Minor core version which is required for module functionality",
                    "type": "integer"
                },
                "revisionDate": {
                    "description": "Revision date",
                    "type": "integer"
                },
                "packSize": {
                    "description": "Module pack size (received from marketplace)",
                    "type": "string"
                },
                "xcnPlan": {
                    "description": "X-Cart 5 plan identificator for module\n0 - for all kinds of installation\n-1 - not for downloadable\n>0 - part of specific X-Cart 5 plan",
                    "type": "string"
                },
                "moduleName": {
                    "description": "Module name",
                    "type": "string",
                    "x-length": 255
                },
                "authorName": {
                    "description": "Author name",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "iconURL": {
                    "description": "Icon URL",
                    "type": "string",
                    "x-length": 255
                },
                "pageURL": {
                    "description": "Icon URL",
                    "type": "string",
                    "x-length": 255
                },
                "authorPageURL": {
                    "description": "Icon URL",
                    "type": "string",
                    "x-length": 255
                },
                "dependencies": {
                    "description": "Module dependencies",
                    "type": "array"
                },
                "tags": {
                    "description": "Module tags",
                    "type": "array"
                },
                "fromMarketplace": {
                    "description": "Flag",
                    "type": "boolean"
                },
                "isLanding": {
                    "description": "Landing page flag",
                    "type": "boolean"
                },
                "landingPosition": {
                    "description": "Position on the landing page",
                    "type": "integer"
                },
                "isSystem": {
                    "description": "Flag (true if module is 'system module')",
                    "type": "boolean"
                },
                "hasLicense": {
                    "description": "Flag (true if module has license text)",
                    "type": "boolean"
                },
                "editionState": {
                    "description": "Module availability in the store's edition\n0 - addon is not available in any editions\n1 - addon is available in store's edition\n2 - addon is available in other editions only",
                    "type": "integer"
                },
                "editions": {
                    "description": "Available editions",
                    "type": "array"
                },
                "xbProductId": {
                    "description": "XB product ID",
                    "type": "integer"
                },
                "isSkin": {
                    "description": "Flag (true if module is 'skin module')",
                    "type": "boolean"
                },
                "private": {
                    "description": "Flag: true - module is private, 0 - public",
                    "type": "boolean"
                },
                "wave": {
                    "description": "Wave of current module version",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ModuleKey": {
            "properties": {
                "keyId": {
                    "description": "Key id",
                    "type": "integer"
                },
                "name": {
                    "description": "Module name",
                    "type": "string",
                    "x-length": 64
                },
                "author": {
                    "description": "Author name",
                    "type": "string",
                    "x-length": 64
                },
                "keyValue": {
                    "description": "Key value",
                    "type": "string",
                    "x-length": 64
                },
                "keyType": {
                    "description": "Flag if the key is binded to batch or module.\n0 - it is a module license key\n1 - it is a batch  license key\n2 - it is a core   license key",
                    "type": "integer"
                },
                "xcnPlan": {
                    "description": "Type of license if the keyType is KEY_TYPE_XCN (==2)",
                    "type": "string"
                },
                "keyData": {
                    "description": "Module data",
                    "type": "array"
                },
                "active": {
                    "description": "Flag of key availability: true - key is active; false - key is unavailable",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\MoneyModificator": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "class": {
                    "description": "Class name",
                    "type": "string"
                },
                "modificator": {
                    "description": "Method-modificator",
                    "type": "string",
                    "x-length": 64
                },
                "validator": {
                    "description": "Method-validator",
                    "type": "string",
                    "x-length": 64
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "behavior": {
                    "description": "Behavior limitation",
                    "type": "string",
                    "x-length": 64
                },
                "purpose": {
                    "description": "Purpose limitation",
                    "type": "string",
                    "x-length": 64
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Notification": {
            "properties": {
                "templatesDirectory": {
                    "description": "Notification templates directory",
                    "type": "string",
                    "x-length": 255
                },
                "availableForAdmin": {
                    "description": "Is available for admin",
                    "type": "boolean"
                },
                "availableForCustomer": {
                    "description": "Is available for admin",
                    "type": "boolean"
                },
                "enabledForAdmin": {
                    "description": "Is available for admin",
                    "type": "boolean"
                },
                "enabledForCustomer": {
                    "description": "Is available for admin",
                    "type": "boolean"
                },
                "adminHeaderEnabled": {
                    "description": "Is header enabled for admin",
                    "type": "boolean"
                },
                "adminGreetingEnabled": {
                    "description": "Is greeting enabled for admin",
                    "type": "boolean"
                },
                "adminSignatureEnabled": {
                    "description": "Is signature enabled for admin",
                    "type": "boolean"
                },
                "customerHeaderEnabled": {
                    "description": "Is header enabled for customer",
                    "type": "boolean"
                },
                "customerGreetingEnabled": {
                    "description": "Is greeting enabled for customer",
                    "type": "boolean"
                },
                "customerSignatureEnabled": {
                    "description": "Is signature enabled for customer",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\NotificationTranslation": {
            "properties": {
                "name": {
                    "description": "Notification name",
                    "type": "string",
                    "x-length": 128
                },
                "description": {
                    "description": "Notification description",
                    "type": "string"
                },
                "customerSubject": {
                    "description": "Notification subject for customer",
                    "type": "string",
                    "x-length": 255
                },
                "customerText": {
                    "description": "Notification text for customer",
                    "type": "string"
                },
                "adminSubject": {
                    "description": "Notification subject for admin",
                    "type": "string",
                    "x-length": 255
                },
                "adminText": {
                    "description": "Notification text for admin",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Modifier": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "class": {
                    "description": "Logic class name",
                    "type": "string",
                    "x-length": 255
                },
                "weight": {
                    "description": "Weight",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Status\\Payment": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Status code",
                    "type": "string",
                    "x-length": 4
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Status\\PaymentTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "customerName": {
                    "description": "Customer name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Status\\Property": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "paymentStatus": {
                    "description": "Payment status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                },
                "shippingStatus": {
                    "description": "Shipping status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                },
                "incStock": {
                    "description": "Increase (true) or decrease (false) inventory",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Status\\Shipping": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Status code",
                    "type": "string",
                    "x-length": 4
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Status\\ShippingTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "customerName": {
                    "description": "Customer name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order\\Surcharge": {
            "properties": {
                "owner": {
                    "description": "Surcharge owner (order)",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 8
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 128
                },
                "class": {
                    "description": "Control class name",
                    "type": "string",
                    "x-length": 255
                },
                "include": {
                    "description": "Surcharge include flag",
                    "type": "boolean"
                },
                "available": {
                    "description": "Surcharge evailability",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "name": {
                    "description": "Name (stored)",
                    "type": "string",
                    "x-length": 255
                },
                "weight": {
                    "description": "Weight",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Order": {
            "properties": {
                "usedCoupons": {
                    "description": "Used coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\UsedCoupon"
                    }
                },
                "uspsShipment": {
                    "description": "USPS Shipments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\USPS\\Model\\Shipment"
                    }
                },
                "capostParcels": {
                    "description": "Canada Post parcels (reference to the Canada Post parcels model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel"
                    }
                },
                "capostReturns": {
                    "description": "Reference to the Canada Post returns model",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn"
                    }
                },
                "capostOffice": {
                    "description": "Reference to the Canada Post post office model",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\PostOffice"
                },
                "giftWrapping": {
                    "type": "boolean"
                },
                "greetingMessage": {
                    "type": "string"
                },
                "mailchimpStoreId": {
                    "description": "Mailchimp store id",
                    "type": "string",
                    "x-length": 255
                },
                "mandrill_mails": {
                    "description": "Mandrill e-mail messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\Mandrill\\Model\\MandrillMail"
                    }
                },
                "not_finished_order": {
                    "description": "Order link to not finished order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "pbOrder": {
                    "description": "Pitney Bowes order association",
                    "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\PBOrder"
                },
                "conversation": {
                    "description": "Conversation",
                    "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Conversation"
                },
                "order_id": {
                    "description": "Order unique id",
                    "type": "integer"
                },
                "profile": {
                    "description": "Order profile",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "orig_profile": {
                    "description": "Original profile",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "shipping_id": {
                    "description": "Shipping method unique id",
                    "type": "integer"
                },
                "shipping_method_name": {
                    "description": "Shipping method name",
                    "type": "string"
                },
                "payment_method_name": {
                    "description": "Payment method name",
                    "type": "string"
                },
                "tracking": {
                    "description": "Shipping tracking code",
                    "type": "string",
                    "x-length": 32
                },
                "date": {
                    "description": "Order creation timestamp",
                    "type": "integer"
                },
                "lastRenewDate": {
                    "description": "Last order renew date",
                    "type": "integer"
                },
                "paymentStatus": {
                    "description": "Payment status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Payment"
                },
                "shippingStatus": {
                    "description": "Shipping status",
                    "$ref": "#/definitions/XLite\\Model\\Order\\Status\\Shipping"
                },
                "notes": {
                    "description": "Customer notes",
                    "type": "string"
                },
                "adminNotes": {
                    "description": "Admin notes",
                    "type": "string"
                },
                "details": {
                    "description": "Order details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderDetail"
                    }
                },
                "trackingNumbers": {
                    "description": "Order tracking numbers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderTrackingNumber"
                    }
                },
                "events": {
                    "description": "Order events queue",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                    }
                },
                "items": {
                    "description": "Order items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem"
                    }
                },
                "surcharges": {
                    "description": "Order surcharges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Order\\Surcharge"
                    }
                },
                "payment_transactions": {
                    "description": "Payment transactions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                    }
                },
                "currency": {
                    "description": "Currency",
                    "$ref": "#/definitions/XLite\\Model\\Currency"
                },
                "orderNumber": {
                    "description": "Unique order identificator (it is working for orders only, not for cart entities)",
                    "type": "string",
                    "x-length": 255
                },
                "recent": {
                    "description": "Recent flag: true if order's statuses were not changed manually by an administrator, otherwise - false",
                    "type": "boolean"
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                },
                "total": {
                    "description": "Total",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Subtotal",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderDetail": {
            "properties": {
                "detail_id": {
                    "description": "Order detail unique id",
                    "type": "integer"
                },
                "name": {
                    "description": "Record name (code)",
                    "type": "string",
                    "x-length": 255
                },
                "label": {
                    "description": "Record label",
                    "type": "string",
                    "x-length": 255
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "order": {
                    "description": "Relation to a order entity",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderHistoryEvents": {
            "properties": {
                "event_id": {
                    "description": "Order history event unique id",
                    "type": "integer"
                },
                "date": {
                    "description": "Event creation timestamp",
                    "type": "integer"
                },
                "code": {
                    "description": "Code of event",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "Human-readable description of event",
                    "type": "string",
                    "x-length": 1024
                },
                "data": {
                    "description": "Data for human-readable description",
                    "type": "array"
                },
                "comment": {
                    "description": "Event comment",
                    "type": "string"
                },
                "details": {
                    "description": "Event details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderHistoryEventsData"
                    }
                },
                "order": {
                    "description": "Relation to a order entity",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "author": {
                    "description": "Author profile of the event",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderHistoryEventsData": {
            "properties": {
                "id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "name": {
                    "description": "Record name",
                    "type": "string",
                    "x-length": 128
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "event": {
                    "description": "Transaction",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderItem\\AttributeValue": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "orderItem": {
                    "description": "Order item (relation)",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "value": {
                    "description": "Value",
                    "type": "string",
                    "x-length": 255
                },
                "attributeId": {
                    "description": "Attribute id",
                    "type": "integer"
                },
                "attributeValueC": {
                    "description": "Attribute value (checkbox)",
                    "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                },
                "attributeValueS": {
                    "description": "Attribute value (select)",
                    "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                },
                "attributeValueT": {
                    "description": "Attribute value (text)",
                    "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderItem\\Surcharge": {
            "properties": {
                "owner": {
                    "description": "Surcharge owner (order item)",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 8
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 128
                },
                "class": {
                    "description": "Control class name",
                    "type": "string",
                    "x-length": 255
                },
                "include": {
                    "description": "Surcharge include flag",
                    "type": "boolean"
                },
                "available": {
                    "description": "Surcharge evailability",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "name": {
                    "description": "Name (stored)",
                    "type": "string",
                    "x-length": 255
                },
                "weight": {
                    "description": "Weight",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderItem": {
            "properties": {
                "privateAttachments": {
                    "description": "Order items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Egoods\\Model\\OrderItem\\PrivateAttachment"
                    }
                },
                "categoryAdded": {
                    "description": "Category added name",
                    "type": "string"
                },
                "pinCodes": {
                    "description": "Pin codes (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\PINCodes\\Model\\PinCode"
                    }
                },
                "vatRate": {
                    "description": "Item VAT rate: <rate value><rate type> (e.g. 10%, 10)",
                    "type": "string",
                    "x-length": 32
                },
                "capostParcelItems": {
                    "description": "Canada Post parcel items (reference to the Canada Post parcel item model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Item"
                    }
                },
                "capostReturnItems": {
                    "description": "Canada Post return items (reference to the Canada Post return item model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Item"
                    }
                },
                "customerAttachments": {
                    "description": "Customer file attachments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CustomerAttachments\\Model\\OrderItem\\Attachment\\Attachment"
                    }
                },
                "parcelItems": {
                    "description": "Pitney Bowes order association",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\ParcelItem"
                    }
                },
                "variant": {
                    "description": "Product variant",
                    "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                },
                "item_id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "object": {
                    "description": "Object (product)",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "name": {
                    "description": "Item name",
                    "type": "string",
                    "x-length": 255
                },
                "sku": {
                    "description": "Item SKU",
                    "type": "string",
                    "x-length": 32
                },
                "price": {
                    "description": "Item price",
                    "type": "string"
                },
                "itemNetPrice": {
                    "description": "Item net price",
                    "type": "string"
                },
                "discountedSubtotal": {
                    "description": "Item discounted subtotal",
                    "type": "string"
                },
                "amount": {
                    "description": "Item quantity",
                    "type": "integer"
                },
                "order": {
                    "description": "Item order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "surcharges": {
                    "description": "Order item surcharges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem\\Surcharge"
                    }
                },
                "attributeValues": {
                    "description": "Attribute values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem\\AttributeValue"
                    }
                },
                "total": {
                    "description": "Total",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Subtotal",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\OrderTrackingNumber": {
            "properties": {
                "tracking_id": {
                    "description": "Order tracking number unique id",
                    "type": "integer"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "order": {
                    "description": "Relation to a order entity",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\BackendTransaction": {
            "properties": {
                "id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "date": {
                    "description": "Transaction creation timestamp",
                    "type": "integer"
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "x-length": 1
                },
                "value": {
                    "description": "Transaction value",
                    "type": "string"
                },
                "type": {
                    "description": "Transaction type",
                    "type": "string",
                    "x-length": 20
                },
                "payment_transaction": {
                    "description": "Payment transactions",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                },
                "data": {
                    "description": "Transaction data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransactionData"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\BackendTransactionData": {
            "properties": {
                "data_id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "name": {
                    "description": "Record name",
                    "type": "string",
                    "x-length": 128
                },
                "label": {
                    "description": "Record public name",
                    "type": "string",
                    "x-length": 255
                },
                "access_level": {
                    "description": "Access level",
                    "type": "string",
                    "x-length": 1
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "transaction": {
                    "description": "Transaction",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\Method": {
            "properties": {
                "method_id": {
                    "description": "Payment method unique id",
                    "type": "integer"
                },
                "service_name": {
                    "description": "Method service name (gateway or API name)",
                    "type": "string",
                    "x-length": 128
                },
                "class": {
                    "description": "Process class name",
                    "type": "string",
                    "x-length": 255
                },
                "moduleName": {
                    "description": "Specific module family name",
                    "type": "string",
                    "x-length": 255
                },
                "orderby": {
                    "description": "Position",
                    "type": "integer"
                },
                "adminOrderby": {
                    "description": "Position in popup",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Enabled status",
                    "type": "boolean"
                },
                "moduleEnabled": {
                    "description": "Module enabled status",
                    "type": "boolean"
                },
                "added": {
                    "description": "Added status",
                    "type": "boolean"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "settings": {
                    "description": "Settings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\MethodSetting"
                    }
                },
                "fromMarketplace": {
                    "description": "Flag:\n1 - method has been got from marketplace,\n0 - method has been added after distr or module installation",
                    "type": "boolean"
                },
                "iconURL": {
                    "description": "Payment method icon URL (used for methods from marketplace)",
                    "type": "string",
                    "x-length": 255
                },
                "countries": {
                    "description": "Countries of merchant (merchants from these countries can sign up and use this method)",
                    "type": "array"
                },
                "exCountries": {
                    "description": "Excluded countries (merchants from these countries cannot sign up for payment account)",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\MethodSetting": {
            "properties": {
                "setting_id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "name": {
                    "description": "Setting name",
                    "type": "string",
                    "x-length": 128
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "payment_method": {
                    "description": "Payment method",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\MethodTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "title": {
                    "description": "Title (Name of payment method which is displayed for customer on checkout)",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "adminDescription": {
                    "description": "Admin description",
                    "type": "string"
                },
                "altAdminDescription": {
                    "description": "Alternative admin description",
                    "type": "string"
                },
                "instruction": {
                    "description": "Instruction",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\Transaction": {
            "properties": {
                "transaction_id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "date": {
                    "description": "Transaction creation timestamp",
                    "type": "integer"
                },
                "publicTxnId": {
                    "description": "Public transaction id",
                    "type": "string",
                    "x-length": 16
                },
                "method_name": {
                    "description": "Payment method name",
                    "type": "string",
                    "x-length": 128
                },
                "method_local_name": {
                    "description": "Payment method localized name",
                    "type": "string",
                    "x-length": 255
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "x-length": 1
                },
                "value": {
                    "description": "Transaction value",
                    "type": "string"
                },
                "note": {
                    "description": "Customer message",
                    "type": "string",
                    "x-length": 255
                },
                "type": {
                    "description": "Transaction type",
                    "type": "string",
                    "x-length": 16
                },
                "public_id": {
                    "description": "Public transaction ID",
                    "type": "string"
                },
                "order": {
                    "description": "Order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "payment_method": {
                    "description": "Payment method",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\Method"
                },
                "data": {
                    "description": "Transaction data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\TransactionData"
                    }
                },
                "backend_transactions": {
                    "description": "Related backend transactions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Payment\\BackendTransaction"
                    }
                },
                "currency": {
                    "description": "Currency",
                    "$ref": "#/definitions/XLite\\Model\\Currency"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Payment\\TransactionData": {
            "properties": {
                "data_id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "name": {
                    "description": "Record name",
                    "type": "string",
                    "x-length": 128
                },
                "label": {
                    "description": "Record public name",
                    "type": "string",
                    "x-length": 255
                },
                "access_level": {
                    "description": "Access level",
                    "type": "string",
                    "x-length": 1
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "transaction": {
                    "description": "Transaction",
                    "$ref": "#/definitions/XLite\\Model\\Payment\\Transaction"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Product\\GlobalTab": {
            "properties": {
                "enabled": {
                    "description": "Is tab available or not",
                    "type": "boolean"
                },
                "custom_tab": {
                    "description": "Global custom tab",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\CustomGlobalTab"
                },
                "product_specific_aliases": {
                    "description": "Global custom tab",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\Tab"
                    }
                },
                "id": {
                    "description": "Tab unique ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Tab position",
                    "type": "integer"
                },
                "service_name": {
                    "description": "Tab name",
                    "type": "string"
                },
                "providers": {
                    "description": "Tab provider(module namespace or core)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Product\\GlobalTabProvider"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Product\\GlobalTabProvider": {
            "properties": {
                "id": {
                    "description": "Tab unique ID",
                    "type": "integer"
                },
                "tab": {
                    "description": "Global tab",
                    "$ref": "#/definitions/XLite\\Model\\Product\\GlobalTab"
                },
                "code": {
                    "description": "Tab name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Product": {
            "properties": {
                "featuredProducts": {
                    "description": "Featured products (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\FeaturedProducts\\Model\\FeaturedProduct"
                    }
                },
                "attachments": {
                    "description": "Product attachments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment"
                    }
                },
                "ogMeta": {
                    "description": "Custom Open graph meta tags",
                    "type": "string"
                },
                "useCustomOG": {
                    "description": "User Open graph meta tags generator flag",
                    "type": "boolean"
                },
                "marketPrice": {
                    "description": "Product market price",
                    "type": "string"
                },
                "pinCodesEnabled": {
                    "description": "Whether pin codes are enabled for this product",
                    "type": "boolean"
                },
                "autoPinCodes": {
                    "description": "Whether to create pin codes automatically",
                    "type": "boolean"
                },
                "pinCodes": {
                    "description": "Pin codes (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\PINCodes\\Model\\PinCode"
                    }
                },
                "views_stats": {
                    "description": "Relation to product views statistics",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\ProductAdvisor\\Model\\ProductStats"
                    }
                },
                "purchase_stats": {
                    "description": "Relation to product purchase statistics",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\ProductAdvisor\\Model\\ProductStats"
                    }
                },
                "participateSale": {
                    "description": "Flag, if the product participates in the sale",
                    "type": "boolean"
                },
                "discountType": {
                    "description": "self::SALE_DISCOUNT_TYPE_PRICE   if \"sale value\" is considered as \"Sale price\",\nself::SALE_DISCOUNT_TYPE_PERCENT if \"sale value\" is considered as \"Percent Off\".",
                    "type": "string",
                    "x-length": 32
                },
                "salePriceValue": {
                    "description": "\"Sale value\"",
                    "type": "string"
                },
                "xcPendingBulkEdit": {
                    "description": "Flag to exporting entities (no need setters and getters)",
                    "type": "boolean"
                },
                "tabs": {
                    "description": "Order tabs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\Tab"
                    }
                },
                "isCustomerAttachmentsAvailable": {
                    "description": "Product is available for customer attachments",
                    "type": "boolean"
                },
                "isCustomerAttachmentsRequired": {
                    "description": "Attachment is required for add to cart",
                    "type": "boolean"
                },
                "facebookMarketingEnabled": {
                    "description": "Product is available for Facebook Marketing feed",
                    "type": "boolean"
                },
                "freeShip": {
                    "description": "Is free shipping available for the product",
                    "type": "boolean"
                },
                "freightFixedFee": {
                    "description": "Shipping freight fixed fee",
                    "type": "string"
                },
                "useAsSegmentCondition": {
                    "description": "Use product in segment conditions",
                    "type": "boolean"
                },
                "exported_pb": {
                    "description": "True if product was exported to PB and didn't change after",
                    "type": "boolean"
                },
                "gpc": {
                    "description": "Global Product Code",
                    "type": "string",
                    "x-length": 100
                },
                "gtin": {
                    "description": "Global Trade Identification Number",
                    "type": "string",
                    "x-length": 25
                },
                "hs_code": {
                    "description": "Harmony system code",
                    "type": "string",
                    "x-length": 6
                },
                "mpn": {
                    "description": "Manufacturer part number",
                    "type": "string",
                    "x-length": 100
                },
                "model_number": {
                    "description": "Manufacturer model number",
                    "type": "string",
                    "x-length": 200
                },
                "stock_number": {
                    "description": "Manufacturer stock number",
                    "type": "string",
                    "x-length": 100
                },
                "hazmat": {
                    "description": "Does contain hazardous materials?",
                    "type": "boolean"
                },
                "chemicals": {
                    "description": "Does contain chemicals?",
                    "type": "boolean"
                },
                "pesticide": {
                    "description": "Does contain pesticide?",
                    "type": "boolean"
                },
                "aerosol": {
                    "description": "Does contain aerosol?",
                    "type": "boolean"
                },
                "rppc": {
                    "description": "Does contain plastic container?",
                    "type": "boolean"
                },
                "non_spillable": {
                    "description": "Does contain non spillable battery?",
                    "type": "boolean"
                },
                "fuel": {
                    "description": "Can contain fuel?",
                    "type": "boolean"
                },
                "ormd": {
                    "description": "Does contain orm-d?",
                    "type": "boolean"
                },
                "battery": {
                    "description": "Battery type",
                    "type": "string",
                    "x-length": 100
                },
                "product_condition": {
                    "description": "Condition",
                    "type": "string",
                    "x-length": 1
                },
                "country_of_origin": {
                    "description": "Country of origin",
                    "$ref": "#/definitions/XLite\\Model\\Country"
                },
                "restrictions": {
                    "description": "restrictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\ProductRestriction"
                    }
                },
                "tags": {
                    "description": "Tags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\ProductTags\\Model\\Tag"
                    }
                },
                "variants": {
                    "description": "Product variants",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                    }
                },
                "variantsAttributes": {
                    "description": "Product variants attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Attribute"
                    }
                },
                "wholesalePrices": {
                    "description": "Relation to a product entity",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Wholesale\\Model\\WholesalePrice"
                    }
                },
                "reviews": {
                    "description": "Product reviews",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\Reviews\\Model\\Review"
                    }
                },
                "upsellingProducts": {
                    "description": "Links to related products (relation [this product] -> [related product])",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\Upselling\\Model\\UpsellingProduct"
                    }
                },
                "upsellingParentProducts": {
                    "description": "Back links from related products (back relation [related product] -> [this product])",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\Upselling\\Model\\UpsellingProduct"
                    }
                },
                "product_id": {
                    "description": "Product unique ID",
                    "type": "integer"
                },
                "price": {
                    "description": "Product price",
                    "type": "string"
                },
                "sku": {
                    "description": "Product SKU",
                    "type": "string",
                    "x-length": 32
                },
                "enabled": {
                    "description": "Is product available or not",
                    "type": "boolean"
                },
                "weight": {
                    "description": "Product weight",
                    "type": "string"
                },
                "useSeparateBox": {
                    "description": "Is product shipped in separate box",
                    "type": "boolean"
                },
                "boxWidth": {
                    "description": "Product box width",
                    "type": "string"
                },
                "boxLength": {
                    "description": "Product box length",
                    "type": "string"
                },
                "boxHeight": {
                    "description": "Product box height",
                    "type": "string"
                },
                "itemsPerBox": {
                    "description": "How many product items can be placed in a box",
                    "type": "integer"
                },
                "free_shipping": {
                    "description": "Flag: false - product is shippable, true - product is not shippable",
                    "type": "boolean"
                },
                "taxable": {
                    "description": "If false then the product is free from any taxes",
                    "type": "boolean"
                },
                "javascript": {
                    "description": "Custom javascript code",
                    "type": "string"
                },
                "arrivalDate": {
                    "description": "Arrival date (UNIX timestamp)",
                    "type": "integer"
                },
                "date": {
                    "description": "Creation date (UNIX timestamp)",
                    "type": "integer"
                },
                "updateDate": {
                    "description": "Update date (UNIX timestamp)",
                    "type": "integer"
                },
                "needProcess": {
                    "description": "Is product need process or not",
                    "type": "boolean"
                },
                "categoryProducts": {
                    "description": "Relation to a CategoryProducts entities",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CategoryProducts"
                    }
                },
                "order_items": {
                    "description": "Product order items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem"
                    }
                },
                "images": {
                    "description": "Product images",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Image\\Product\\Image"
                    }
                },
                "inventoryEnabled": {
                    "description": "Is inventory tracking enabled or not",
                    "type": "boolean"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "lowLimitEnabledCustomer": {
                    "description": "Is low limit notification enabled for customer or not",
                    "type": "boolean"
                },
                "lowLimitEnabled": {
                    "description": "Is low limit notification enabled for admin or not",
                    "type": "boolean"
                },
                "lowLimitAmount": {
                    "description": "Low limit amount",
                    "type": "integer"
                },
                "productClass": {
                    "description": "Product class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\ProductClass"
                },
                "taxClass": {
                    "description": "Tax class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\TaxClass"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Attribute"
                    }
                },
                "attributeValueC": {
                    "description": "Attribute value (checkbox)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                    }
                },
                "attributeValueT": {
                    "description": "Attribute value (text)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueText"
                    }
                },
                "attributeValueS": {
                    "description": "Attribute value (select)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                    }
                },
                "attrSepTab": {
                    "description": "Show product attributes in a separate tab",
                    "type": "boolean"
                },
                "quickData": {
                    "description": "Quick data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\QuickData"
                    }
                },
                "memberships": {
                    "description": "Memberships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Membership"
                    }
                },
                "cleanURLs": {
                    "description": "Clean URLs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CleanURL"
                    }
                },
                "metaDescType": {
                    "description": "Meta description type",
                    "type": "string",
                    "x-length": 1
                },
                "sales": {
                    "description": "Sales",
                    "type": "integer"
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ProductClass": {
            "properties": {
                "coupons": {
                    "description": "Coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\Coupon"
                    }
                },
                "categories": {
                    "description": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Category"
                    }
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Attribute"
                    }
                },
                "attribute_groups": {
                    "description": "Attribute groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeGroup"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ProductClassTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ProductTranslation": {
            "properties": {
                "name": {
                    "description": "Product name",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "Product description",
                    "type": "string"
                },
                "briefDescription": {
                    "description": "Product brief description",
                    "type": "string"
                },
                "metaTags": {
                    "description": "Meta tags",
                    "type": "string",
                    "x-length": 255
                },
                "metaDesc": {
                    "description": "Product meta description",
                    "type": "string"
                },
                "metaTitle": {
                    "description": "Meta title",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Profile": {
            "properties": {
                "gaClientId": {
                    "description": "Google analytics cid",
                    "type": "string"
                },
                "socialLoginProvider": {
                    "description": "Auth provider (facebook, google, etc.)",
                    "type": "string",
                    "x-length": 128
                },
                "socialLoginId": {
                    "description": "Auth provider-unique user id (for ex. facebook user id)",
                    "type": "string",
                    "x-length": 128
                },
                "pictureUrl": {
                    "description": "Profile picture url",
                    "type": "string"
                },
                "mail_chimp_lists": {
                    "description": "MailChimp lists",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpList"
                    }
                },
                "mail_chimp_interests": {
                    "description": "MailChimp lists",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroupName"
                    }
                },
                "mail_chimp_segments": {
                    "description": "MailChimp segments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpSegment"
                    }
                },
                "auth_phone_number": {
                    "description": "Authentication phone number",
                    "type": "string"
                },
                "auth_phone_code": {
                    "description": "Authentication phone country code",
                    "type": "string"
                },
                "authy_id": {
                    "description": "ID in Authy",
                    "type": "integer"
                },
                "conversations": {
                    "description": "Coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Conversation"
                    }
                },
                "profile_id": {
                    "description": "Profile unique ID",
                    "type": "integer"
                },
                "login": {
                    "description": "Login (e-mail)",
                    "type": "string",
                    "x-length": 128
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "password_hint": {
                    "description": "Password hint",
                    "type": "string",
                    "x-length": 128
                },
                "password_hint_answer": {
                    "description": "Password hint answer",
                    "type": "string",
                    "x-length": 128
                },
                "passwordResetKey": {
                    "description": "Password reset key (for 'Forgot password')",
                    "type": "string"
                },
                "passwordResetKeyDate": {
                    "description": "Timestamp of reset key creation date",
                    "type": "integer"
                },
                "access_level": {
                    "description": "Access level",
                    "type": "integer"
                },
                "cms_profile_id": {
                    "description": "CMS profile Id",
                    "type": "integer"
                },
                "cms_name": {
                    "description": "CMS name",
                    "type": "string",
                    "x-length": 32
                },
                "added": {
                    "description": "Timestamp of profile creation date",
                    "type": "integer"
                },
                "first_login": {
                    "description": "Timestamp of first login event",
                    "type": "integer"
                },
                "last_login": {
                    "description": "Timestamp of last login event",
                    "type": "integer"
                },
                "status": {
                    "description": "Profile status",
                    "type": "string",
                    "x-length": 1
                },
                "statusComment": {
                    "description": "Status comment (reason)",
                    "type": "string",
                    "x-length": 255
                },
                "referer": {
                    "description": "Referer",
                    "type": "string",
                    "x-length": 255
                },
                "order": {
                    "description": "Relation to a order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "event": {
                    "description": "Relation to an event",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderHistoryEvents"
                    }
                },
                "language": {
                    "description": "Language code",
                    "type": "string",
                    "x-length": 2
                },
                "last_shipping_id": {
                    "description": "Last selected shipping id",
                    "type": "integer"
                },
                "last_payment_id": {
                    "description": "Last selected payment id",
                    "type": "integer"
                },
                "membership": {
                    "description": "Membership: many-to-one relation with memberships table"
                },
                "pending_membership": {
                    "description": "Pending membership: many-to-one relation with memberships table"
                },
                "addresses": {
                    "description": "Address book: one-to-many relation with address book entity",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Address"
                    }
                },
                "roles": {
                    "description": "Roles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Role"
                    }
                },
                "anonymous": {
                    "description": "Flag of anonymous profile (used for checkout process only)",
                    "type": "boolean"
                },
                "forceChangePassword": {
                    "description": "Flag if the user needs to change the password.\nThe customers only",
                    "type": "boolean"
                },
                "dateOfLoginAttempt": {
                    "description": "Date of last login attempt",
                    "type": "integer"
                },
                "countOfLoginAttempts": {
                    "description": "Count of login attempt",
                    "type": "integer"
                },
                "searchFakeField": {
                    "description": "Fake field for search",
                    "type": "string"
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\QuickData": {
            "properties": {
                "minPrice": {
                    "description": "Minimal price",
                    "type": "string"
                },
                "maxPrice": {
                    "description": "Maximal price",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "price": {
                    "description": "Price",
                    "type": "string"
                },
                "membership": {
                    "description": "Membership (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Region": {
            "properties": {
                "code": {
                    "description": "Region code",
                    "type": "string",
                    "x-length": 10
                },
                "name": {
                    "description": "Region name",
                    "type": "string",
                    "x-length": 64
                },
                "weight": {
                    "description": "Region weight",
                    "type": "integer"
                },
                "country": {
                    "description": "Country (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Country"
                },
                "states": {
                    "description": "States (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\State"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Role\\Permission": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 32
                },
                "section": {
                    "description": "Section",
                    "type": "string",
                    "x-length": 128
                },
                "roles": {
                    "description": "Roles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Role"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Role\\PermissionTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Role": {
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "permissions": {
                    "description": "Permissions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Role\\Permission"
                    }
                },
                "profiles": {
                    "description": "Profiles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Profile"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\RoleTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\SearchFilter": {
            "properties": {
                "id": {
                    "description": "Filter unique id",
                    "type": "integer"
                },
                "filterKey": {
                    "description": "Filter key: identifies the filter location (target + items list)",
                    "type": "string"
                },
                "parameters": {
                    "description": "Filter parameters (serialized array)",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\SearchFilterTranslation": {
            "properties": {
                "name": {
                    "description": "Filter name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Session": {
            "properties": {
                "id": {
                    "description": "Session increment id",
                    "type": "integer"
                },
                "sid": {
                    "description": "Public session id",
                    "type": "string",
                    "x-length": 32
                },
                "expiry": {
                    "description": "Session expiration time",
                    "type": "integer"
                },
                "cells": {
                    "description": "Session cells",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\SessionCell"
                    }
                },
                "formIds": {
                    "description": "Form IDs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\FormId"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\SessionCell": {
            "properties": {
                "cell_id": {
                    "description": "Cell unique id",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Value type",
                    "type": "string",
                    "x-length": 16
                },
                "session": {
                    "$ref": "#/definitions/XLite\\Model\\Session"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Shipping\\Markup": {
            "properties": {
                "markup_id": {
                    "description": "A unique ID of the markup",
                    "type": "integer"
                },
                "min_weight": {
                    "description": "Markup condition: min weight of products in the order",
                    "type": "string"
                },
                "max_weight": {
                    "description": "Markup condition: max weight of products in the order",
                    "type": "string"
                },
                "min_total": {
                    "description": "Markup condition: min order subtotal",
                    "type": "string"
                },
                "max_total": {
                    "description": "Markup condition: max order subtotal",
                    "type": "string"
                },
                "min_items": {
                    "description": "Markup condition: min product items in the order",
                    "type": "string"
                },
                "max_items": {
                    "description": "Markup condition: max product items in the order",
                    "type": "string"
                },
                "markup_flat": {
                    "description": "Markup value: flat rate value",
                    "type": "string"
                },
                "markup_percent": {
                    "description": "Markup value: percent value",
                    "type": "string"
                },
                "markup_per_item": {
                    "description": "Markup value: flat rate value per product item",
                    "type": "string"
                },
                "markup_per_weight": {
                    "description": "Markup value: flat rate value per weight unit",
                    "type": "string"
                },
                "shipping_method": {
                    "description": "Shipping method (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Shipping\\Method"
                },
                "zone": {
                    "description": "Zone (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Zone"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Shipping\\Method": {
            "properties": {
                "free": {
                    "description": "Whether the method is free or not",
                    "type": "boolean"
                },
                "method_id": {
                    "description": "A unique ID of the method",
                    "type": "integer"
                },
                "processor": {
                    "description": "Processor class name",
                    "type": "string",
                    "x-length": 255
                },
                "carrier": {
                    "description": "Carrier of the method (for instance, \"UPS\" or \"USPS\")",
                    "type": "string",
                    "x-length": 255
                },
                "code": {
                    "description": "Unique code of shipping method (within processor space)",
                    "type": "string",
                    "x-length": 255
                },
                "enabled": {
                    "description": "Whether the method is enabled or disabled",
                    "type": "boolean"
                },
                "position": {
                    "description": "A position of the method among other registered methods",
                    "type": "integer"
                },
                "shipping_markups": {
                    "description": "Shipping rates (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                    }
                },
                "taxClass": {
                    "description": "Tax class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\TaxClass"
                },
                "added": {
                    "description": "Added status",
                    "type": "boolean"
                },
                "moduleName": {
                    "description": "Specific module family name",
                    "type": "string",
                    "x-length": 255
                },
                "fromMarketplace": {
                    "description": "Flag:\n1 - method has been got from marketplace,\n0 - method has been added after distr or module installation",
                    "type": "boolean"
                },
                "iconURL": {
                    "description": "Icon URL (used for methods from marketplace)",
                    "type": "string",
                    "x-length": 255
                },
                "tableType": {
                    "description": "Table type",
                    "type": "string",
                    "x-length": 3
                },
                "handlingFee": {
                    "description": "Handling fee (surcharge) for online methods",
                    "type": "string"
                },
                "handlingFeeType": {
                    "description": "Handling fee type(absolute or percent)",
                    "type": "string",
                    "x-length": 1
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Shipping\\MethodTranslation": {
            "properties": {
                "name": {
                    "description": "Shipping method name",
                    "type": "string",
                    "x-length": 255
                },
                "deliveryTime": {
                    "description": "Shipping delivery time (for offline methods)",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\State": {
            "properties": {
                "state_id": {
                    "description": "State unique id",
                    "type": "integer"
                },
                "state": {
                    "description": "State name",
                    "type": "string",
                    "x-length": 64
                },
                "code": {
                    "description": "State code",
                    "type": "string",
                    "x-length": 64
                },
                "country": {
                    "description": "Country (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Country"
                },
                "region": {
                    "description": "Region (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Region"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Task": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "owner": {
                    "description": "Owner class",
                    "type": "string",
                    "x-length": 128
                },
                "triggerTime": {
                    "description": "Trigger time",
                    "type": "integer"
                },
                "data": {
                    "description": "Task abstract data",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\TaxClass": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\TaxClassTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Model\\TemporaryFile": {
            "properties": {
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\TmpVar": {
            "properties": {
                "id": {
                    "description": "Option unique name",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 128
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ViewList": {
            "properties": {
                "list_override": {
                    "description": "Class list name",
                    "type": "string"
                },
                "weight_override": {
                    "description": "Child weight",
                    "type": "integer",
                    "x-length": 11
                },
                "override_mode": {
                    "description": "Override mode",
                    "type": "integer"
                },
                "list_id": {
                    "description": "List id",
                    "type": "integer",
                    "x-length": 11
                },
                "class": {
                    "description": "Class name",
                    "type": "string"
                },
                "list": {
                    "description": "Class list name",
                    "type": "string"
                },
                "zone": {
                    "description": "List interface",
                    "type": "string",
                    "x-length": 16
                },
                "child": {
                    "description": "Child class name",
                    "type": "string",
                    "x-length": 512
                },
                "weight": {
                    "description": "Child weight",
                    "type": "integer",
                    "x-length": 11
                },
                "tpl": {
                    "description": "Template relative path",
                    "type": "string",
                    "x-length": 512
                },
                "version": {
                    "description": "Template relative path",
                    "type": "string",
                    "x-length": 32
                }
            },
            "type": "object"
        },
        "XLite\\Model\\Zone": {
            "properties": {
                "zone_id": {
                    "description": "Zone unique id",
                    "type": "integer"
                },
                "zone_name": {
                    "description": "Zone name",
                    "type": "string",
                    "x-length": 64
                },
                "is_default": {
                    "description": "Zone default flag",
                    "type": "boolean"
                },
                "zone_elements": {
                    "description": "Zone elements (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\ZoneElement"
                    }
                },
                "shipping_markups": {
                    "description": "Shipping rates (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Shipping\\Markup"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Model\\ZoneElement": {
            "properties": {
                "element_id": {
                    "description": "Unique zone element Id",
                    "type": "integer",
                    "x-length": 11
                },
                "element_value": {
                    "description": "Zone element value, e.g. 'US', 'US_NY', 'New Y%' etc",
                    "type": "string",
                    "x-length": 255
                },
                "element_type": {
                    "description": "Element type",
                    "type": "string",
                    "x-length": 1
                },
                "zone": {
                    "description": "Zone (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Zone"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\ContactUs\\View\\FormField\\Captcha": {
            "type": "object"
        },
        "XLite\\Module\\CDev\\Coupons\\Model\\Coupon": {
            "properties": {
                "id": {
                    "description": "Product unique ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 16
                },
                "enabled": {
                    "description": "Enabled status",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "comment": {
                    "description": "Comment",
                    "type": "string",
                    "x-length": 64
                },
                "uses": {
                    "description": "Uses count",
                    "type": "integer"
                },
                "dateRangeBegin": {
                    "description": "Date range (begin)",
                    "type": "integer"
                },
                "dateRangeEnd": {
                    "description": "Date range (end)",
                    "type": "integer"
                },
                "totalRangeBegin": {
                    "description": "Total range (begin)",
                    "type": "string"
                },
                "totalRangeEnd": {
                    "description": "Total range (end)",
                    "type": "string"
                },
                "usesLimit": {
                    "description": "Uses limit",
                    "type": "integer"
                },
                "usesLimitPerUser": {
                    "description": "Uses limit per user",
                    "type": "integer"
                },
                "singleUse": {
                    "description": "Flag: Can a coupon be used together with other coupons (false) or no (true)",
                    "type": "boolean"
                },
                "productClasses": {
                    "description": "Product classes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\ProductClass"
                    }
                },
                "memberships": {
                    "description": "Memberships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Membership"
                    }
                },
                "usedCoupons": {
                    "description": "Used coupons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\UsedCoupon"
                    }
                },
                "categories": {
                    "description": "Categories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Category"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Coupons\\Model\\UsedCoupon": {
            "properties": {
                "id": {
                    "description": "Product unique ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 16
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "order": {
                    "description": "Order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "coupon": {
                    "description": "Coupon",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\Coupons\\Model\\Coupon"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Egoods\\Model\\OrderItem\\PrivateAttachment": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "title": {
                    "description": "Saved title",
                    "type": "string",
                    "x-length": 255
                },
                "downloadKey": {
                    "description": "Key",
                    "type": "string",
                    "x-length": 128
                },
                "expire": {
                    "description": "Expire time (UNIX timestamp)",
                    "type": "integer"
                },
                "attempt": {
                    "description": "Attempts count",
                    "type": "integer"
                },
                "attemptLimit": {
                    "description": "Attempts limit",
                    "type": "integer"
                },
                "blocked": {
                    "description": "Blocked status",
                    "type": "boolean"
                },
                "item": {
                    "description": "Item order",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "attachment": {
                    "description": "Item order",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Egoods\\Model\\Product\\Attachment\\AttachmentHistoryPoint": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "login": {
                    "description": "Login",
                    "type": "string"
                },
                "ip": {
                    "description": "Ip",
                    "type": "string"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                },
                "path": {
                    "description": "File path",
                    "type": "string"
                },
                "additionalDetails": {
                    "description": "Additional details",
                    "type": "string"
                },
                "attachment": {
                    "description": "Relation to a attachment",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment"
                },
                "order": {
                    "description": "Relation to a attachment",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "profile": {
                    "description": "Relation to a profile entity",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\FeaturedProducts\\Model\\FeaturedProduct": {
            "properties": {
                "id": {
                    "description": "Product + category link unique id",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "Sort position",
                    "type": "integer"
                },
                "product": {
                    "description": "Product (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "category": {
                    "description": "Category (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Category"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment\\Storage": {
            "properties": {
                "attachment": {
                    "description": "Relation to a attachment",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment": {
            "properties": {
                "private": {
                    "description": "Private attachment",
                    "type": "boolean"
                },
                "history": {
                    "description": "Attachment history",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\Egoods\\Model\\Product\\Attachment\\AttachmentHistoryPoint"
                    }
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "orderby": {
                    "description": "Sort position",
                    "type": "integer"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "storage": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\Attachment\\Storage"
                },
                "access": {
                    "description": "Access - membership id or [self::ACCESS_ANY, self::ACCESS_REGISTERED]",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\FileAttachments\\Model\\Product\\AttachmentTranslation": {
            "properties": {
                "title": {
                    "description": "Title",
                    "type": "string",
                    "x-length": 128
                },
                "description": {
                    "description": "Title",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\PINCodes\\Model\\PinCode": {
            "properties": {
                "id": {
                    "description": "PIN Code unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "x-length": 64
                },
                "createDate": {
                    "description": "Create date",
                    "type": "integer"
                },
                "isSold": {
                    "description": "Is sold",
                    "type": "boolean"
                },
                "isBlocked": {
                    "description": "Is blocked",
                    "type": "boolean"
                },
                "product": {
                    "description": "Product (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "orderItem": {
                    "description": "OrderItem (relation)",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\ProductAdvisor\\Model\\ProductStats": {
            "properties": {
                "stat_id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "viewed_product": {
                    "description": "Viewed product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "bought_product": {
                    "description": "Bought product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "count": {
                    "description": "Count of bought products",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SalesTax\\Model\\Tax\\Rate": {
            "properties": {
                "id": {
                    "description": "Rate unique ID",
                    "type": "integer"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax (relation)",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SalesTax\\Model\\Tax"
                },
                "zone": {
                    "description": "Zone (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Zone"
                },
                "taxClass": {
                    "description": "Tax class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\TaxClass"
                },
                "membership": {
                    "description": "Membership (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                },
                "noTaxClass": {
                    "description": "For product without tax class",
                    "type": "boolean"
                },
                "taxableBase": {
                    "description": "Taxable base",
                    "type": "string",
                    "x-length": 16
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SalesTax\\Model\\Tax": {
            "properties": {
                "id": {
                    "description": "Tax unique ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "rates": {
                    "description": "Tax rates (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\SalesTax\\Model\\Tax\\Rate"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SalesTax\\Model\\TaxTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\Image\\Page\\Image": {
            "properties": {
                "page": {
                    "description": "Relation to a page entity",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Page"
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu\\QuickFlags": {
            "properties": {
                "id": {
                    "description": "Doctrine ID",
                    "type": "integer"
                },
                "submenus_count_all": {
                    "description": "Total number of submenus",
                    "type": "integer"
                },
                "submenus_count_enabled": {
                    "description": "Number of enabled submenus",
                    "type": "integer"
                },
                "menu": {
                    "description": "Relation to a menu entity",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "link": {
                    "description": "Link",
                    "type": "string"
                },
                "lpos": {
                    "description": "Node left value",
                    "type": "integer"
                },
                "rpos": {
                    "description": "Node right value",
                    "type": "integer"
                },
                "depth": {
                    "description": "Menu \"depth\" in the tree",
                    "type": "integer"
                },
                "quickFlags": {
                    "description": "Some cached flags",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu\\QuickFlags"
                },
                "children": {
                    "description": "Child menus",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu"
                    }
                },
                "parent": {
                    "description": "Parent menu",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Menu"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Is menu enabled or not",
                    "type": "boolean"
                },
                "visibleFor": {
                    "description": "Visible for anonymous only (A), logged in only (L), for all visitors (AL)",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\MenuTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\Page": {
            "properties": {
                "ogMeta": {
                    "description": "Custom Open graph meta tags",
                    "type": "string"
                },
                "showSocialButtons": {
                    "description": "Show Social share buttons or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Is menu enabled or not",
                    "type": "boolean"
                },
                "image": {
                    "description": "One-to-one relation with page_images table",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\SimpleCMS\\Model\\Image\\Page\\Image"
                },
                "cleanURLs": {
                    "description": "Clean URLs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CleanURL"
                    }
                },
                "metaDescType": {
                    "description": "Meta description type",
                    "type": "string",
                    "x-length": 1
                },
                "position": {
                    "description": "Tab position",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\SimpleCMS\\Model\\PageTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "teaser": {
                    "description": "Teaser\ntodo: rename to $metaDesc",
                    "type": "string"
                },
                "body": {
                    "description": "Content",
                    "type": "string"
                },
                "metaKeywords": {
                    "description": "Meta keywords\ntodo: rename to $metaTags, set column type: (type=\"string\", length=255)",
                    "type": "string"
                },
                "metaTitle": {
                    "description": "Value of the title HTML-tag for category page",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\USPS\\Model\\Shipment": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "transactionId": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "requestData": {
                    "type": "array"
                },
                "responseData": {
                    "type": "array"
                },
                "printDate": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "shipmentId": {
                    "type": "string",
                    "x-length": 32
                },
                "trackingNumber": {
                    "type": "string",
                    "x-length": 32
                },
                "trackingData": {
                    "type": "array"
                },
                "labelURL": {
                    "type": "string"
                },
                "labelContent": {
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\VAT\\Model\\Tax\\Rate": {
            "properties": {
                "id": {
                    "description": "Rate unique ID",
                    "type": "integer"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax (relation)",
                    "$ref": "#/definitions/XLite\\Module\\CDev\\VAT\\Model\\Tax"
                },
                "zone": {
                    "description": "Zone (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Zone"
                },
                "taxClass": {
                    "description": "Tax class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\TaxClass"
                },
                "membership": {
                    "description": "Membership (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                },
                "noTaxClass": {
                    "description": "For product without tax class",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\VAT\\Model\\Tax": {
            "properties": {
                "id": {
                    "description": "Tax unique ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Eenabled",
                    "type": "boolean"
                },
                "rates": {
                    "description": "Tax rates (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\CDev\\VAT\\Model\\Tax\\Rate"
                    }
                },
                "vatMembership": {
                    "description": "VAT base membership",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                },
                "vatZone": {
                    "description": "VAT base Zone",
                    "$ref": "#/definitions/XLite\\Model\\Zone"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\VAT\\Model\\TaxTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\VolumeDiscounts\\Model\\VolumeDiscount": {
            "properties": {
                "id": {
                    "description": "Discount unique ID",
                    "type": "integer"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "subtotalRangeBegin": {
                    "description": "Subtotal range (begin)",
                    "type": "string"
                },
                "subtotalRangeEnd": {
                    "description": "Subtotal range (end)",
                    "type": "string"
                },
                "membership": {
                    "description": "Membership",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Wholesale\\Model\\MinQuantity": {
            "properties": {
                "id": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "quantity": {
                    "description": "Minimum product quantity",
                    "type": "integer"
                },
                "membership": {
                    "description": "Relation to a membership entity",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Wholesale\\Model\\ProductVariantWholesalePrice": {
            "properties": {
                "productVariant": {
                    "description": "Relation to a product variant entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                },
                "id": {
                    "description": "Wholesale price unique ID",
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "x-length": 32
                },
                "price": {
                    "description": "Value",
                    "type": "string"
                },
                "quantityRangeBegin": {
                    "description": "Quantity range (begin)",
                    "type": "integer"
                },
                "quantityRangeEnd": {
                    "description": "Quantity range (end)",
                    "type": "integer"
                },
                "membership": {
                    "description": "Relation to a membership entity",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\CDev\\Wholesale\\Model\\WholesalePrice": {
            "properties": {
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "id": {
                    "description": "Wholesale price unique ID",
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "x-length": 32
                },
                "price": {
                    "description": "Value",
                    "type": "string"
                },
                "quantityRangeBegin": {
                    "description": "Quantity range (begin)",
                    "type": "integer"
                },
                "quantityRangeEnd": {
                    "description": "Quantity range (end)",
                    "type": "integer"
                },
                "membership": {
                    "description": "Relation to a membership entity",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\Add2CartPopup\\Model\\Source": {
            "properties": {
                "id": {
                    "description": "Unique Id",
                    "type": "integer"
                },
                "code": {
                    "description": "Unique source code",
                    "type": "string",
                    "x-length": 3
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "position": {
                    "description": "Position (priority)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\DeliveryService\\Option": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Option code",
                    "type": "string",
                    "x-length": 255
                },
                "name": {
                    "description": "Option name\nTODO: remove that field and make getting an option name by a function",
                    "type": "string",
                    "x-length": 255
                },
                "mandatory": {
                    "description": "Indicates whether this option is mandatory for the service",
                    "type": "boolean"
                },
                "qualifierRequired": {
                    "description": "True indicates that this option if selected must include a qualifier on the option.\nThis is true for insurance (COV) and collect on delivery (COD) options",
                    "type": "boolean"
                },
                "qualifierMax": {
                    "description": "Numeric \u2013 indicates the maximum value of the qualifier for this service.\nThe maximum value of a qualifier may differ between services. This is specific to the insurance (COV) option.",
                    "type": "string"
                },
                "service": {
                    "description": "Item's service (reference to the item's service model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\DeliveryService"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\DeliveryService": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "code": {
                    "description": "Service code",
                    "type": "string",
                    "x-length": 32
                },
                "countryCode": {
                    "description": "Country",
                    "type": "string",
                    "x-length": 2
                },
                "name": {
                    "description": "Service name",
                    "type": "string",
                    "x-length": 255
                },
                "expiry": {
                    "description": "Service expiration time (UNIX timestamp)",
                    "type": "integer"
                },
                "maxWeight": {
                    "description": "Maximum weight that can be sent using this service (in grams)",
                    "type": "integer"
                },
                "minWeight": {
                    "description": "Minimum weight that can be sent using this service (in grams)",
                    "type": "integer"
                },
                "maxLength": {
                    "description": "Maximum size of the longest dimension of an item (in cm)",
                    "type": "string"
                },
                "minLength": {
                    "description": "Minimum size of the longest dimension of an item (in cm)",
                    "type": "string"
                },
                "maxWidth": {
                    "description": "Maximum size of the second longest dimension of an item (in cm)",
                    "type": "string"
                },
                "minWidth": {
                    "description": "Minimum size of the second longest dimension of an item (in cm)",
                    "type": "string"
                },
                "maxHeight": {
                    "description": "Maximum size of the shortest dimension of an item (in cm)",
                    "type": "string"
                },
                "minHeight": {
                    "description": "Maximum size of the shortest dimension of an item (in cm)",
                    "type": "string"
                },
                "lengthPlusGirthMax": {
                    "description": "Maximum calculated value of length + 2*width + 2*height (in cm)",
                    "type": "string"
                },
                "lengthHeightWidthSumMax": {
                    "description": "Maximum value of length + width + height (in cm)",
                    "type": "string"
                },
                "oversizeLimit": {
                    "description": "If any dimension exceeds this limit an oversize fee will apply to the shipment (in cm)",
                    "type": "string"
                },
                "densityFactor": {
                    "description": "Standard density factor used to calculate cubed weight (in grams)",
                    "type": "integer"
                },
                "canShipInMailingTube": {
                    "description": "True indicates that parcels shipped with this service can be shipped in a mailing tube (option CYL can be used)",
                    "type": "boolean"
                },
                "canShipUnpackaged": {
                    "description": "True indicates that parcels shipped with this service can be shipped unpackaged (option UP can be used)",
                    "type": "boolean"
                },
                "allowedAsReturnService": {
                    "description": "True indicates that this service can be used in the return-spec of a Create Shipment request",
                    "type": "boolean"
                },
                "options": {
                    "description": "Service options (reference to the service's options model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\DeliveryService\\Option"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Item": {
            "properties": {
                "id": {
                    "description": "Item unique ID",
                    "type": "integer"
                },
                "parcel": {
                    "description": "Item's parcel (reference to the canada post parcels model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel"
                },
                "orderItem": {
                    "description": "Item's order item (reference to the order items model)",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "amount": {
                    "description": "Item quantity",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest\\Link\\Storage": {
            "properties": {
                "link": {
                    "description": "Relation to a link",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest\\Link"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest\\Link": {
            "properties": {
                "manifest": {
                    "description": "Link's manifest (reference to the Canada Post parcel manifest model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest"
                },
                "storage": {
                    "description": "Relation to a storage entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest\\Link\\Storage"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "rel": {
                    "description": "Relationship to link\nIndicates the resource related to the current response",
                    "type": "string",
                    "x-length": 255
                },
                "href": {
                    "description": "Indicates the endpoint to be used to call the web service. It contains the URL and may also contain a query string.",
                    "type": "string",
                    "x-length": 255
                },
                "idx": {
                    "description": "Present on links to formatted output such as labels. The value starts at 0 for the first page and subsequent pages (if extant) count up by 1.",
                    "type": "integer"
                },
                "mediaType": {
                    "description": "A character string that indicates the format and version of the data to expect when the web service is invoked. \nThe value in this attribute should be copied to the HTTP header variable \"Accept\" when the href link is invoked.",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest": {
            "properties": {
                "poNumber": {
                    "description": "PO number for the manifest",
                    "type": "string",
                    "x-length": 255
                },
                "shipments": {
                    "description": "Shipments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment"
                    }
                },
                "links": {
                    "description": "This structure represents a list of links to information relating to the manifest (referece to the manifest's links model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest\\Link"
                    }
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "rel": {
                    "description": "Relationship to link\nIndicates the resource related to the current response",
                    "type": "string",
                    "x-length": 255
                },
                "href": {
                    "description": "Indicates the endpoint to be used to call the web service. It contains the URL and may also contain a query string.",
                    "type": "string",
                    "x-length": 255
                },
                "idx": {
                    "description": "Present on links to formatted output such as labels. The value starts at 0 for the first page and subsequent pages (if extant) count up by 1.",
                    "type": "integer"
                },
                "mediaType": {
                    "description": "A character string that indicates the format and version of the data to expect when the web service is invoked. \nThe value in this attribute should be copied to the HTTP header variable \"Accept\" when the href link is invoked.",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Link\\Storage": {
            "properties": {
                "link": {
                    "description": "Relation to a link",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Link"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Link": {
            "properties": {
                "shipment": {
                    "description": "Link's shipment (reference to the canada post parcel shipment model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment"
                },
                "storage": {
                    "description": "Relation to a storage entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Link\\Storage"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "rel": {
                    "description": "Relationship to link\nIndicates the resource related to the current response",
                    "type": "string",
                    "x-length": 255
                },
                "href": {
                    "description": "Indicates the endpoint to be used to call the web service. It contains the URL and may also contain a query string.",
                    "type": "string",
                    "x-length": 255
                },
                "idx": {
                    "description": "Present on links to formatted output such as labels. The value starts at 0 for the first page and subsequent pages (if extant) count up by 1.",
                    "type": "integer"
                },
                "mediaType": {
                    "description": "A character string that indicates the format and version of the data to expect when the web service is invoked. \nThe value in this attribute should be copied to the HTTP header variable \"Accept\" when the href link is invoked.",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\DeliveryOption": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "trackingDetails": {
                    "description": "Shipment tracking details (reference to the Canada Post tracking model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking"
                },
                "name": {
                    "description": "The string representing the delivery-option",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "The description of the delivery option",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\File": {
            "properties": {
                "docType": {
                    "description": "Tracking document type",
                    "type": "string",
                    "x-length": 1
                },
                "trackingDetails": {
                    "description": "Relation to a Canada Post tracking entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\SignificantEvent": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "trackingDetails": {
                    "description": "Shipment tracking details (reference to the Canada Post tracking model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking"
                },
                "identifier": {
                    "description": "Event identifier used to identify event types",
                    "type": "string",
                    "x-length": 255
                },
                "date": {
                    "description": "yyyy-mm-dd - date of a tracking event",
                    "type": "string",
                    "x-length": 10
                },
                "time": {
                    "description": "hh:mm:ss - time of a tracking event",
                    "type": "string",
                    "x-length": 8
                },
                "timeZone": {
                    "description": "Time zone associated with an event. May not be populated for international tracking events",
                    "type": "string",
                    "x-length": 255
                },
                "description": {
                    "description": "A brief description of the event",
                    "type": "string",
                    "x-length": 255
                },
                "signatoryName": {
                    "description": "If the event presented is a signature capture event, the text of this field will represent the name of the signature.",
                    "type": "string",
                    "x-length": 255
                },
                "site": {
                    "description": "Site information provided by the parcel handler",
                    "type": "string",
                    "x-length": 255
                },
                "province": {
                    "description": "For domestic events, this contains the province that the event occurred in",
                    "type": "string",
                    "x-length": 255
                },
                "retailLocationId": {
                    "description": "Contains the office-id where a parcel is being/was retained",
                    "type": "string",
                    "x-length": 255
                },
                "retailName": {
                    "description": "Retail name of the location where a parcel is/was held",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking": {
            "properties": {
                "id": {
                    "description": "Shipment unique ID",
                    "type": "integer"
                },
                "shipment": {
                    "description": "Tracking info shipment (reference to the Canada Post shipment model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment"
                },
                "deliveryOptions": {
                    "description": "This structure represents a list of delivery options",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\DeliveryOption"
                    }
                },
                "significantEvents": {
                    "description": "This structure represents a list of delivery events",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\SignificantEvent"
                    }
                },
                "files": {
                    "description": "This structure represents a list of tracking files",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking\\File"
                    }
                },
                "expiry": {
                    "description": "Tracking expiration time (UNIX timestamp)",
                    "type": "integer"
                },
                "pin": {
                    "description": "The PIN that can be used for other tracking calls",
                    "type": "string",
                    "x-length": 255
                },
                "activeExists": {
                    "description": "Indicates that the tracking information is contained in the active data repository",
                    "type": "boolean"
                },
                "archiveExists": {
                    "description": "Indicates that the tracking information is contained in the archive data repository",
                    "type": "boolean"
                },
                "destinationPostalId": {
                    "description": "First 3 digits of the destination Postal Code for parcels to be delivered in Canada.\nFor international parcels this is the Postal Identifier of the destination country \n(e.g. ZIP code for parcels with U.S. destination) or an identifier of the destination country .",
                    "type": "string",
                    "x-length": 255
                },
                "expectedDeliveryDate": {
                    "description": "The date the item is expected to reach the destination address for addresses in Canada.",
                    "type": "integer"
                },
                "changedExpectedDate": {
                    "description": "Indicates a new expected delivery date",
                    "type": "integer"
                },
                "changedExpectedDeliveryReason": {
                    "description": "Text description of reason for change to expected delivery date.",
                    "type": "string",
                    "x-length": 255
                },
                "mailedByCustomerNumber": {
                    "description": "Customer number of the mailing customer.",
                    "type": "string",
                    "x-length": 255
                },
                "mailedOnBehalfOfCustomerNumber": {
                    "description": "Customer number of the mailed-on-behalf-of customer if applicable.",
                    "type": "string",
                    "x-length": 255
                },
                "originalPin": {
                    "description": "In the situation where a parcel is being returned and the original parcel was created with an anticipated return, \nthis field will contain the original PIN when the return PIN is queried.",
                    "type": "string",
                    "x-length": 255
                },
                "serviceName": {
                    "description": "Canada Post service name in the language specified by the request. (The service-name will default to English if language is not specified).\nFor inbound international parcels, service type is empty or contains the service name from its shipper of origin if available.",
                    "type": "string",
                    "x-length": 255
                },
                "serviceName_2": {
                    "description": "Canada Post service name in the other Canadian official language.\nFor inbound international parcels, service name is empty or contains the service name from its shipper of origin.",
                    "type": "string",
                    "x-length": 255
                },
                "customerRef_1": {
                    "description": "The value supplied by the shipper as customer-ref-1 when the shipment was first created with Canada Post.\nFrench character set is supported through this interface.",
                    "type": "string",
                    "x-length": 255
                },
                "customerRef_2": {
                    "description": "The value supplied by the shipper as customer reference 2 when the shipment was first created with Canada Post.\nSpecial characters should be avoided when entering customer reference numbers.",
                    "type": "string",
                    "x-length": 255
                },
                "returnPin": {
                    "description": "In the situation where a parcel is being sent with an anticipated return, this field will contain the return PIN when the original PIN is queried.",
                    "type": "string",
                    "x-length": 255
                },
                "signatureImageExists": {
                    "description": "True indicates that Get Signature Image will return a signature image. If false, there is no need to call \"Get Signature Image\" because it will return \u201cnot found\u201d.",
                    "type": "boolean"
                },
                "suppressSignature": {
                    "description": "Indicates whether a signature image collected by Canada Post for domestic parcels has been requested to be suppressed for viewing by the recipient of a parcel.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment": {
            "properties": {
                "id": {
                    "description": "Shipment unique ID",
                    "type": "integer"
                },
                "parcel": {
                    "description": "Shipment's parcel (reference to the Canada Post parcels model)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel"
                },
                "links": {
                    "description": "This structure represents a list of links to information relating to the shipment that was created (referece to the shipment's links model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Link"
                    }
                },
                "manifests": {
                    "description": "Manifests (for contracted shipments only)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Manifest"
                    }
                },
                "trackingDetails": {
                    "description": "Tracking details (return from \"Get Tracking Details\" request)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment\\Tracking"
                },
                "shipmentId": {
                    "description": "A unique identifier for the shipment\nThis can be used in any future calls to Transmit Shipments to indicate that this shipment is to be excluded from the transmit.",
                    "type": "string",
                    "x-length": 32
                },
                "shipmentStatus": {
                    "description": "Indicates the current status of the shipment",
                    "type": "string",
                    "x-length": 14
                },
                "trackingPin": {
                    "description": "This is the tracking PIN for the shipment\nThe tracking PIN can be used as input to other parcel web service calls such as Get Tracking Details.",
                    "type": "string",
                    "x-length": 16
                },
                "returnTrackingPin": {
                    "description": "This is the tracking PIN for the return shipment. \nThe tracking PIN can be used as input to other parcel web service calls such as Get Tracking Details.",
                    "type": "string",
                    "x-length": 16
                },
                "poNumber": {
                    "description": "The Canada Post Purchase Order number; only applicable and returned on a shipment where no manifest is required for proof of payment",
                    "type": "string",
                    "x-length": 32
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel": {
            "properties": {
                "id": {
                    "description": "Parcel unique id",
                    "type": "integer"
                },
                "number": {
                    "description": "Parcel number",
                    "type": "integer"
                },
                "status": {
                    "description": "Status code",
                    "type": "string",
                    "x-length": 2
                },
                "quoteType": {
                    "description": "Quote type",
                    "type": "string",
                    "x-length": 2
                },
                "order": {
                    "description": "Parcel's order (referece to the orders model)",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "items": {
                    "description": "Parcel items (referece to the parcel's items model)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Item"
                    }
                },
                "shipment": {
                    "description": "Parcel shipment info (return from \"Create Shipment\" and \"Create Non-Contract Shipment\" requests)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\Order\\Parcel\\Shipment"
                },
                "boxWeight": {
                    "description": "Parcel box weight (max weight)",
                    "type": "string"
                },
                "boxWidth": {
                    "description": "Parcel box width",
                    "type": "string"
                },
                "boxLength": {
                    "description": "Parcel box length",
                    "type": "string"
                },
                "boxHeight": {
                    "description": "Parcel box height",
                    "type": "string"
                },
                "isDocument": {
                    "description": "Is parcel a document",
                    "type": "boolean"
                },
                "isUnpackaged": {
                    "description": "Is parcel unpackaged",
                    "type": "boolean"
                },
                "isMailingTube": {
                    "description": "Is parcel a mailing tube",
                    "type": "boolean"
                },
                "isOversized": {
                    "description": "Is parcel oversized",
                    "type": "boolean"
                },
                "notifyOnShipment": {
                    "description": "Send notification on shipment",
                    "type": "boolean"
                },
                "notifyOnException": {
                    "description": "Send notification on exception",
                    "type": "boolean"
                },
                "notifyOnDelivery": {
                    "description": "Send notification on delivery",
                    "type": "boolean"
                },
                "optSignature": {
                    "type": "boolean"
                },
                "optCoverage": {
                    "description": "Option \"Coverage amount\"",
                    "type": "string"
                },
                "optAgeProof": {
                    "description": "Options \"Proof of age required - 18\" and \"Proof of age required - 19\"",
                    "type": "string",
                    "x-length": 4
                },
                "optWayToDeliver": {
                    "description": "Delivery way type (the \"Card for pickup\", \"Do not safe drop\", \"Leave at door\" options)",
                    "type": "string",
                    "x-length": 3
                },
                "optNonDelivery": {
                    "description": "Non-delivery handling type (the \"Return at Sender\u2019s Expense\", \"Return to Sender\", \"Abandon\" options)",
                    "type": "string",
                    "x-length": 4
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\Order\\PostOffice": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "order": {
                    "description": "Reference to the order model",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "officeId": {
                    "description": "The internal Canada Post assigned unique ID for a Post Office\n(Field pattern: \"\\d{10}\", has leading zeros)",
                    "type": "string",
                    "x-length": 10
                },
                "name": {
                    "description": "The name assigned to the Post Office\n(Max length: 40)",
                    "type": "string",
                    "x-length": 40
                },
                "location": {
                    "description": "The location of a Post Office. This is used to distinguish among various Post Offices that have similar names.\n(Max length: 40)",
                    "type": "string",
                    "x-length": 40
                },
                "distance": {
                    "description": "The distance (in KM) to the Post Office from the location specified in the query\n(min: 0, max: 99999.99, fraction: 2)",
                    "type": "string"
                },
                "bilingualDesignation": {
                    "description": "True indicates that the Post Office provides bilingual services (English and French)",
                    "type": "boolean"
                },
                "city": {
                    "description": "Municipality in which the Post Office is located\n(Max length: 40)",
                    "type": "string",
                    "x-length": 40
                },
                "latitude": {
                    "description": "The latitude of the Post Office\n(min: 40, max: 90, fraction: 5)",
                    "type": "string"
                },
                "longitude": {
                    "description": "The longitude of the Post Office\n(min: -150, max: -50, fraction: 5)",
                    "type": "string"
                },
                "postalCode": {
                    "description": "The Postal Code of the Post Office",
                    "type": "string",
                    "x-length": 20
                },
                "province": {
                    "description": "The province where the Post Office is located",
                    "type": "string",
                    "x-length": 64
                },
                "officeAddress": {
                    "description": "Street number and name for a Post Office\n(Max length: 64)",
                    "type": "string",
                    "x-length": 64
                },
                "workingHours": {
                    "description": "Working hours list",
                    "type": "array"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Item": {
            "properties": {
                "id": {
                    "description": "Item unique ID",
                    "type": "integer"
                },
                "return": {
                    "description": "Reference to the return model",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn"
                },
                "orderItem": {
                    "description": "Reference to the order item model",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "amount": {
                    "description": "Item quantity",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Link\\Storage": {
            "properties": {
                "link": {
                    "description": "Relation to a link",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Link"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Link": {
            "properties": {
                "return": {
                    "description": "Reference to the Canada Post return model",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn"
                },
                "storage": {
                    "description": "Relation to a storage entity",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Link\\Storage"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "rel": {
                    "description": "Relationship to link\nIndicates the resource related to the current response",
                    "type": "string",
                    "x-length": 255
                },
                "href": {
                    "description": "Indicates the endpoint to be used to call the web service. It contains the URL and may also contain a query string.",
                    "type": "string",
                    "x-length": 255
                },
                "idx": {
                    "description": "Present on links to formatted output such as labels. The value starts at 0 for the first page and subsequent pages (if extant) count up by 1.",
                    "type": "integer"
                },
                "mediaType": {
                    "description": "A character string that indicates the format and version of the data to expect when the web service is invoked. \nThe value in this attribute should be copied to the HTTP header variable \"Accept\" when the href link is invoked.",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "items": {
                    "description": "Referece to the return items model",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Item"
                    }
                },
                "links": {
                    "description": "This structure represents a list of links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadaPost\\Model\\ProductsReturn\\Link"
                    }
                },
                "order": {
                    "description": "Referece to the orders model",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "status": {
                    "description": "Status code",
                    "type": "string",
                    "x-length": 2
                },
                "date": {
                    "description": "Creation timestamp",
                    "type": "integer"
                },
                "lastRenewDate": {
                    "description": "Last renew timestamp",
                    "type": "integer"
                },
                "notes": {
                    "description": "Customer notes",
                    "type": "string"
                },
                "adminNotes": {
                    "description": "Admin notes",
                    "type": "string"
                },
                "trackingPin": {
                    "description": "Tracking PIN code",
                    "type": "string",
                    "x-length": 16
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadianTaxes\\Model\\Tax\\Rate": {
            "properties": {
                "id": {
                    "description": "Rate unique ID",
                    "type": "integer"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "x-length": 1
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "tax": {
                    "description": "Tax (relation)",
                    "$ref": "#/definitions/XLite\\Module\\XC\\CanadianTaxes\\Model\\Tax"
                },
                "state": {
                    "description": "State (relation)",
                    "$ref": "#/definitions/XLite\\Model\\State"
                },
                "taxClass": {
                    "description": "Tax class (relation)",
                    "$ref": "#/definitions/XLite\\Model\\TaxClass"
                },
                "membership": {
                    "description": "Membership (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Membership"
                },
                "noTaxClass": {
                    "description": "For product without tax class",
                    "type": "boolean"
                },
                "taxableBase": {
                    "description": "Taxable base",
                    "type": "string",
                    "x-length": 16
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadianTaxes\\Model\\Tax": {
            "properties": {
                "id": {
                    "description": "Tax unique ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "rates": {
                    "description": "Tax rates (relation)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\CanadianTaxes\\Model\\Tax\\Rate"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CanadianTaxes\\Model\\TaxTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CustomerAttachments\\Model\\OrderItem\\Attachment\\Attachment": {
            "properties": {
                "orderItem": {
                    "description": "Order item",
                    "$ref": "#/definitions/XLite\\Model\\OrderItem"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\CustomGlobalTab": {
            "properties": {
                "id": {
                    "description": "Tab unique ID",
                    "type": "integer"
                },
                "global_tab": {
                    "description": "Global tab",
                    "$ref": "#/definitions/XLite\\Model\\Product\\GlobalTab"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\CustomGlobalTabTranslation": {
            "properties": {
                "name": {
                    "description": "Tab name",
                    "type": "string",
                    "x-length": 255
                },
                "brief_info": {
                    "description": "Tab brief info",
                    "type": "string"
                },
                "content": {
                    "description": "Tab Content",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\Tab": {
            "properties": {
                "id": {
                    "description": "Tab unique ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Tab position",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Is tab available or not",
                    "type": "boolean"
                },
                "product": {
                    "description": "Tab product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "global_tab": {
                    "description": "Global tab product",
                    "$ref": "#/definitions/XLite\\Model\\Product\\GlobalTab"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\CustomProductTabs\\Model\\Product\\TabTranslation": {
            "properties": {
                "name": {
                    "description": "Tab name",
                    "type": "string",
                    "x-length": 255
                },
                "brief_info": {
                    "description": "Tab brief info",
                    "type": "string"
                },
                "content": {
                    "description": "Tab Content",
                    "type": "string"
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroup": {
            "properties": {
                "id": {
                    "description": "Group ID",
                    "type": "string",
                    "x-length": 32
                },
                "title": {
                    "description": "Group name",
                    "type": "string",
                    "x-length": 128
                },
                "list": {
                    "description": "MailChimp parent list",
                    "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpList"
                },
                "names": {
                    "description": "Group names",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroupName"
                    }
                },
                "type": {
                    "description": "Group type",
                    "type": "string",
                    "x-length": 128
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroupName": {
            "properties": {
                "id": {
                    "description": "List ID",
                    "type": "string",
                    "x-length": 32
                },
                "name": {
                    "description": "List name",
                    "type": "string",
                    "x-length": 128
                },
                "subscriberCount": {
                    "description": "List name",
                    "type": "integer"
                },
                "group": {
                    "description": "MailChimp parent group",
                    "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroup"
                },
                "profiles": {
                    "description": "Profiles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Profile"
                    }
                },
                "subscribeByDefault": {
                    "description": "Subscribed by default",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\MailChimp\\Model\\MailChimpList": {
            "properties": {
                "id": {
                    "description": "List ID",
                    "type": "string",
                    "x-length": 32
                },
                "name": {
                    "description": "List name",
                    "type": "string",
                    "x-length": 128
                },
                "date_created": {
                    "description": "List creation date",
                    "type": "string",
                    "x-length": 128
                },
                "date_updated": {
                    "description": "Last update date",
                    "type": "integer"
                },
                "list_rating": {
                    "description": "List rating",
                    "type": "string"
                },
                "subscribe_url_short": {
                    "description": "List subscribe URL short",
                    "type": "string",
                    "x-length": 128
                },
                "subscribe_url_long": {
                    "description": "List subscribe URL long",
                    "type": "string",
                    "x-length": 128
                },
                "member_count": {
                    "description": "List member count",
                    "type": "integer"
                },
                "open_rate": {
                    "description": "List mail open rate",
                    "type": "string"
                },
                "click_rate": {
                    "description": "List mail click rate",
                    "type": "string"
                },
                "profiles": {
                    "description": "Profiles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Profile"
                    }
                },
                "segments": {
                    "description": "Segments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpSegment"
                    }
                },
                "groups": {
                    "description": "Groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpGroup"
                    }
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "subscribeByDefault": {
                    "description": "Subscribe by default",
                    "type": "boolean"
                },
                "isRemoved": {
                    "description": "Defines if the list was removed from MailChimp",
                    "type": "boolean"
                },
                "store": {
                    "description": "Qty in stock",
                    "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\Store"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\MailChimp\\Model\\MailChimpSegment": {
            "properties": {
                "id": {
                    "description": "List ID",
                    "type": "string",
                    "x-length": 32
                },
                "name": {
                    "description": "List name",
                    "type": "string",
                    "x-length": 128
                },
                "created_date": {
                    "description": "List creation date",
                    "type": "string",
                    "x-length": 128
                },
                "static": {
                    "description": "Is static MailChimp segment",
                    "type": "boolean"
                },
                "list": {
                    "description": "MailChimp parent list",
                    "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpList"
                },
                "useOrdersLastMonth": {
                    "description": "Use amount of orders as condition",
                    "type": "boolean"
                },
                "ordersLastMonth": {
                    "description": "Amount of orders last month",
                    "type": "integer"
                },
                "useOrderAmount": {
                    "description": "Use total amount of all orders as condition",
                    "type": "boolean"
                },
                "orderAmount": {
                    "description": "Total for all orders",
                    "type": "string"
                },
                "useMemberships": {
                    "description": "Use memberships as condition",
                    "type": "boolean"
                },
                "memberships": {
                    "description": "Memberships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Membership"
                    }
                },
                "useProducts": {
                    "description": "Use specified products as condition",
                    "type": "boolean"
                },
                "products": {
                    "description": "Products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Product"
                    }
                },
                "profiles": {
                    "description": "Profiles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Profile"
                    }
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\MailChimp\\Model\\Store": {
            "properties": {
                "id": {
                    "description": "Store ID",
                    "type": "string",
                    "x-length": 32
                },
                "name": {
                    "type": "string",
                    "x-length": 128
                },
                "list": {
                    "$ref": "#/definitions/XLite\\Module\\XC\\MailChimp\\Model\\MailChimpList"
                },
                "main": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\Mandrill\\Model\\MandrillMail": {
            "properties": {
                "mail_id": {
                    "description": "Mandrill mail ID",
                    "type": "string",
                    "x-length": 32
                },
                "opened": {
                    "description": "Mail was opened",
                    "type": "boolean"
                },
                "clicked": {
                    "description": "Mail link was clicked",
                    "type": "boolean"
                },
                "ip": {
                    "description": "IP address",
                    "type": "string",
                    "x-length": 48
                },
                "country_short": {
                    "description": "Country code",
                    "type": "string",
                    "x-length": 16
                },
                "mobile": {
                    "description": "Is mobile device",
                    "type": "boolean"
                },
                "os_family": {
                    "description": "Operating system",
                    "type": "string",
                    "x-length": 24
                },
                "ua_family": {
                    "description": "User agent family",
                    "type": "string",
                    "x-length": 24
                },
                "order": {
                    "description": "Order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\News\\Model\\NewsMessage": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Is menu enabled or not",
                    "type": "boolean"
                },
                "date": {
                    "description": "Date add news message",
                    "type": "integer"
                },
                "cleanURLs": {
                    "description": "Clean URLs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\CleanURL"
                    }
                },
                "metaDescType": {
                    "description": "Meta description type",
                    "type": "string",
                    "x-length": 1
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\News\\Model\\NewsMessageTranslation": {
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "body": {
                    "description": "Content",
                    "type": "string"
                },
                "brief_description": {
                    "description": "Brief description",
                    "type": "string"
                },
                "metaTags": {
                    "description": "News meta keywords",
                    "type": "string",
                    "x-length": 255
                },
                "metaDesc": {
                    "description": "News meta description",
                    "type": "string"
                },
                "metaTitle": {
                    "description": "Value of the title HTML-tag for news page",
                    "type": "string",
                    "x-length": 255
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\NewsletterSubscriptions\\Model\\Subscriber": {
            "properties": {
                "id": {
                    "description": "Product unique ID",
                    "type": "integer"
                },
                "email": {
                    "description": "Code",
                    "type": "string"
                },
                "profile": {
                    "description": "Enabled status",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\PitneyBowes\\Model\\ParcelItem": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "orderItem": {
                    "description": "Order Item"
                },
                "amount": {
                    "description": "Order Item amount",
                    "type": "integer"
                },
                "pbParcel": {
                    "description": "Pitney Bowes parcel association",
                    "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\PBParcel"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\PitneyBowes\\Model\\PBExport": {
            "properties": {
                "id": {
                    "description": "Export Unique ID",
                    "type": "integer"
                },
                "filename": {
                    "description": "Export filename",
                    "type": "string"
                },
                "exportDate": {
                    "description": "Export date (UNIX timestamp)",
                    "type": "integer"
                },
                "status": {
                    "description": "Export status",
                    "type": "string"
                },
                "errors": {
                    "description": "Export errors",
                    "type": "string"
                },
                "differential": {
                    "description": "True if export is not full",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\PitneyBowes\\Model\\PBOrder": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "ormus": {
                    "description": "Order ID returned by PB",
                    "type": "string"
                },
                "transactionId": {
                    "description": "Transaction ID",
                    "type": "string"
                },
                "order": {
                    "description": "Order association",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "parcels": {
                    "description": "Parcels association",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\PBParcel"
                    }
                },
                "createOrderResponse": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\PitneyBowes\\Model\\PBParcel": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "number": {
                    "description": "number",
                    "type": "string"
                },
                "parcelItems": {
                    "description": "Order items in parcel",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\ParcelItem"
                    }
                },
                "order": {
                    "description": "Pitney Bowes order association",
                    "$ref": "#/definitions/XLite\\Module\\XC\\PitneyBowes\\Model\\PBOrder"
                },
                "createAsnCalled": {
                    "description": "Flag: ASN sent",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\PitneyBowes\\Model\\ProductRestriction": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "country": {
                    "description": "Relation to a country entity",
                    "$ref": "#/definitions/XLite\\Model\\Country"
                },
                "restriction_code": {
                    "description": "Restriction code",
                    "type": "string",
                    "x-length": 255
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\ProductTags\\Model\\Tag": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "position": {
                    "description": "Position",
                    "type": "integer"
                },
                "products": {
                    "description": "Products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Product"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\ProductTags\\Model\\TagTranslation": {
            "properties": {
                "name": {
                    "description": "Tag name",
                    "type": "string",
                    "x-length": 128
                },
                "label_id": {
                    "description": "Label unique id",
                    "type": "integer"
                },
                "code": {
                    "description": "Label language code",
                    "type": "string",
                    "x-length": 2
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\ProductVariants\\Model\\Image\\ProductVariant\\Image": {
            "properties": {
                "product_variant": {
                    "description": "Product variant",
                    "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant"
                },
                "alt": {
                    "description": "Alternative image text",
                    "type": "string",
                    "x-length": 255
                },
                "s3icons": {
                    "description": "S3 icons cache",
                    "type": "array"
                },
                "needMigration": {
                    "description": "Flag: Is need migration of image to S3",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width",
                    "type": "integer"
                },
                "height": {
                    "description": "Height",
                    "type": "integer"
                },
                "hash": {
                    "description": "Image hash",
                    "type": "string",
                    "x-length": 32
                },
                "needProcess": {
                    "description": "Is image need process or not",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "path": {
                    "description": "Path (URL or file name in storage directory)",
                    "type": "string",
                    "x-length": 512
                },
                "fileName": {
                    "description": "File name",
                    "type": "string"
                },
                "mime": {
                    "description": "MIME type",
                    "type": "string",
                    "x-length": 128
                },
                "storageType": {
                    "description": "Storage type",
                    "type": "string",
                    "x-length": 1
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "date": {
                    "description": "Create / modify date (UNIX timestamp)",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\ProductVariants\\Model\\ProductVariant": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "product": {
                    "description": "Product",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "price": {
                    "description": "Price",
                    "type": "string"
                },
                "defaultPrice": {
                    "description": "Default price flag",
                    "type": "boolean"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "defaultAmount": {
                    "description": "Default amount flag",
                    "type": "boolean"
                },
                "weight": {
                    "description": "Weight",
                    "type": "string"
                },
                "defaultWeight": {
                    "description": "Default weight flag",
                    "type": "boolean"
                },
                "sku": {
                    "description": "Product SKU",
                    "type": "string",
                    "x-length": 32
                },
                "variant_id": {
                    "description": "Product variant unique id",
                    "type": "string",
                    "x-length": 32
                },
                "defaultValue": {
                    "description": "Default flag",
                    "type": "boolean"
                },
                "image": {
                    "description": "Image",
                    "$ref": "#/definitions/XLite\\Module\\XC\\ProductVariants\\Model\\Image\\ProductVariant\\Image"
                },
                "attributeValueC": {
                    "description": "Attribute value (checkbox)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueCheckbox"
                    }
                },
                "attributeValueS": {
                    "description": "Attribute value (select)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\AttributeValue\\AttributeValueSelect"
                    }
                },
                "orderItems": {
                    "description": "Product order items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\OrderItem"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\Reviews\\Model\\Review": {
            "properties": {
                "id": {
                    "description": "Review Unique ID",
                    "type": "integer"
                },
                "review": {
                    "description": "Review text",
                    "type": "string"
                },
                "response": {
                    "description": "Response text",
                    "type": "string"
                },
                "rating": {
                    "description": "Review rating",
                    "type": "string"
                },
                "additionDate": {
                    "description": "Addition date (UNIX timestamp)",
                    "type": "integer"
                },
                "responseDate": {
                    "description": "Respond date (UNIX timestamp)",
                    "type": "integer"
                },
                "profile": {
                    "description": "Relation to a profile entity (who adds review)",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "respondent": {
                    "description": "Respondent profile",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "reviewerName": {
                    "description": "Reviewer name",
                    "type": "string"
                },
                "status": {
                    "description": "Review status",
                    "type": "string"
                },
                "product": {
                    "description": "Relation to a product entity",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "ip": {
                    "description": "Remote inet_pton",
                    "type": "string"
                },
                "useForMeta": {
                    "description": "Use for meta flag",
                    "type": "boolean"
                },
                "isNew": {
                    "description": "Flag: New review (flag has reset after admin view the review in the list)",
                    "type": "boolean"
                },
                "xcPendingExport": {
                    "description": "Flag to exporting entities",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\ThemeTweaker\\Model\\Template": {
            "properties": {
                "id": {
                    "description": "Option unique id",
                    "type": "integer"
                },
                "template": {
                    "description": "Original template",
                    "type": "string"
                },
                "date": {
                    "description": "Last modified timestamp",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\Upselling\\Model\\UpsellingProduct": {
            "properties": {
                "id": {
                    "description": "Unique id",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "Sort position",
                    "type": "integer"
                },
                "product": {
                    "description": "Product (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                },
                "parentProduct": {
                    "description": "Parent product (relation)",
                    "$ref": "#/definitions/XLite\\Model\\Product"
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\VendorMessages\\Model\\Conversation": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "messages": {
                    "description": "Messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Message"
                    }
                },
                "order": {
                    "description": "Order",
                    "$ref": "#/definitions/XLite\\Model\\Order"
                },
                "members": {
                    "description": "Conversation members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Model\\Profile"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\VendorMessages\\Model\\Message": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "date": {
                    "description": "Creation date",
                    "type": "integer"
                },
                "body": {
                    "description": "Body",
                    "type": "string"
                },
                "type": {
                    "description": "Body",
                    "type": "string"
                },
                "conversation": {
                    "description": "Order",
                    "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Conversation"
                },
                "author": {
                    "description": "Author",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                },
                "readers": {
                    "description": "Readers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\MessageRead"
                    }
                }
            },
            "type": "object"
        },
        "XLite\\Module\\XC\\VendorMessages\\Model\\MessageRead": {
            "properties": {
                "id": {
                    "description": "Unique ID",
                    "type": "integer"
                },
                "date": {
                    "description": "Read date",
                    "type": "integer"
                },
                "message": {
                    "description": "Message",
                    "$ref": "#/definitions/XLite\\Module\\XC\\VendorMessages\\Model\\Message"
                },
                "reader": {
                    "description": "Reader",
                    "$ref": "#/definitions/XLite\\Model\\Profile"
                }
            },
            "type": "object"
        }
    },
    "parameters": {},
    "responses": {},
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "_key",
            "in": "query"
        }
    },
    "tags": [
        {
            "name": "Product",
            "description": "Product is the building block of your store. It contains data about certain good you trade and is identified by SKU. Product is tightly coupled with its Category and Attributes.",
            "externalDocs": {
                "description": "Find out more about product fields and options",
                "url": "http://kb.x-cart.com/en/products/adding_products.html"
            }
        }
    ],
    "externalDocs": {
        "description": "Find out more about X-Cart REST API",
        "url": "http://devs.x-cart.com/en/basics/rest_api_documentation.html"
    }
}